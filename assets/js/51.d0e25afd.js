(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{482:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("官方文档：https://golang.org/ref/spec")]),t._v(" "),s("p",[t._v("查看每个版本的golang api: https://github.com/golang/go/tree/master/api")]),t._v(" "),s("h2",{attrs:{id:"学习资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习资源"}},[t._v("#")]),t._v(" 学习资源")]),t._v(" "),s("ol",[s("li",[s("s",[s("a",{attrs:{href:"https://tour.go-zh.org/basics/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("go tour"),s("OutboundLink")],1),t._v(":简单上手，熟悉语法")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1fD4y1m7TD?p=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go语言编程快速入门"),s("OutboundLink")],1),t._v("视频教程，适合初学者")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1gJ411p7xC",target:"_blank",rel:"noopener noreferrer"}},[t._v("go web开发"),s("OutboundLink")],1)]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("a",{attrs:{href:"http://golang.iswbm.com/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go编程时光"),s("OutboundLink")],1),t._v(":学习基础知识（个人博客）")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/unknwon/the-way-to-go_ZH_CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go入门指南"),s("OutboundLink")],1),t._v("：正式学习书籍")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://books.studygolang.com/The-Golang-Standard-Library-by-Example/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Go语言标准库》"),s("OutboundLink")],1),t._v(",学习官方库的使用")])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("https://golang.org/dl/")]),t._v(" "),s("h2",{attrs:{id:"编辑器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编辑器"}},[t._v("#")]),t._v(" 编辑器")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("安装vscode插件"),s("code",[t._v("Go")])])]),t._v(" "),s("li",[s("p",[t._v("安装go tools，"),s("code",[t._v("f1>Go:Install/Update Tools")]),t._v(",全选，然后确定，这个需要配置代理，否则会安装报错")])]),t._v(" "),s("li",[s("p",[t._v("使用包，需要初始化"),s("code",[t._v("go mod")]),t._v("，输入指令"),s("code",[t._v("go mod init main")])])]),t._v(" "),s("li",[s("p",[t._v("debug时总是需要按f5来看结果，这很不方便，可以安装插件"),s("code",[t._v("watch-run")]),t._v("，并添加debug task：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// See https://go.microsoft.com/fwlink/?LinkId=733558")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for the documentation about the tasks.json format")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tasks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go debug"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shell"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"command"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go run ${file}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("vscode配置文件添加：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"watch-run.targetList"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"target"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*.go"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"task"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go debug"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"名词解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#名词解释"}},[t._v("#")]),t._v(" 名词解释")]),t._v(" "),s("h3",{attrs:{id:"类型别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型别名"}},[t._v("#")]),t._v(" 类型别名")]),t._v(" "),s("p",[t._v("同一个类型的另一个名字，可以自定义类型别名：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("rune")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n")])])]),s("h3",{attrs:{id:"环绕行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环绕行为"}},[t._v("#")]),t._v(" 环绕行为")]),t._v(" "),s("p",[t._v("当值超过该类型最大值时，会从最小值重新开始累计")]),t._v(" "),s("h3",{attrs:{id:"goroutine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goroutine"}},[t._v("#")]),t._v(" goroutine")]),t._v(" "),s("p",[t._v("独立的任务叫做goroutine。约定：如果代码文档中没有明确说明，那么我们假定这个方法在并发访问的时候是不安全的")]),t._v(" "),s("h3",{attrs:{id:"worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#worker"}},[t._v("#")]),t._v(" worker")]),t._v(" "),s("p",[t._v("长时间使用的goroutine被称为工作进程，一般使用以下方式达到事件循环的目的")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commandc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[t._v("#")]),t._v(" 文档")]),t._v(" "),s("h3",{attrs:{id:"type-assertion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-assertion"}},[t._v("#")]),t._v(" Type Assertion")]),t._v(" "),s("p",[t._v("类型断言，使用方法有两种：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("t:=i.(T)")]),t._v(" 断言一个接口对象i里不是nil,并且接口对象存储的值类型时T，如果断言成功，就会返回值给t，断言失败会触发panic")]),t._v(" "),s("li",[s("code",[t._v("t, ok:= i.(T)")]),t._v("失败不回触发panic，而是ok值为false")])]),t._v(" "),s("h3",{attrs:{id:"errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#errors"}},[t._v("#")]),t._v(" Errors")]),t._v(" "),s("p",[t._v("自定义错误类型：错误是一个内部的接口，只要包含一个Error() string方法的类都属于该接口。错误类型约定应以"),s("code",[t._v("Error")]),t._v("结尾")]),t._v(" "),s("p",[t._v("声明变量为错误时，约定以"),s("code",[t._v("Err")]),t._v("开头")]),t._v(" "),s("p",[t._v("panic比os.Exit更好，panic后会执行所有defer的动作，而Exit不会")]),t._v(" "),s("p",[t._v("在defer函数中调用recover可以防止panic，程序正常执行。")]),t._v(" "),s("h3",{attrs:{id:"statements-声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statements-声明"}},[t._v("#")]),t._v(" Statements（声明）")]),t._v(" "),s("h4",{attrs:{id:"defer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defer"}},[t._v("#")]),t._v(" Defer")]),t._v(" "),s("p",[t._v("延迟处理，所有deferred的动作可以在函数返回前执行。")]),t._v(" "),s("h4",{attrs:{id:"go"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[t._v("#")]),t._v(" go")]),t._v(" "),s("p",[t._v("启动goroutine,只需要再调用前面加一个go关键字，只能用在函数前。")]),t._v(" "),s("p",[t._v("计算机处理器会使用“分时”技术，再多个goroutine上轮流花费时间")]),t._v(" "),s("p",[t._v("在使用goroutine时，各个goroutine的执行顺序无法确定")]),t._v(" "),s("p",[t._v("即使已经停止等待goroutine，但只要main函数还没返回，仍在运行的goroutine将会继续占用内存。")]),t._v(" "),s("h4",{attrs:{id:"select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" select")]),t._v(" "),s("p",[t._v("与switch类似，哪个chanl先返回哪个先执行。")]),t._v(" "),s("p",[t._v("不包含任何case的情况下，将永远等下去。")]),t._v(" "),s("h3",{attrs:{id:"词汇元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词汇元素"}},[t._v("#")]),t._v(" 词汇元素")]),t._v(" "),s("h4",{attrs:{id:"rune-literals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rune-literals"}},[t._v("#")]),t._v(" Rune literals")]),t._v(" "),s("p",[t._v("字符用单引号表示"),s("code",[t._v("''")])]),t._v(" "),s("h3",{attrs:{id:"declarations-and-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#declarations-and-scope"}},[t._v("#")]),t._v(" Declarations and scope")]),t._v(" "),s("h4",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),s("p",[t._v("type可以声明一个新的类型，使用新类型可以提高代码可读性和可靠性，值得注意的是，尽管新的类型基于旧类型，但是这两个类型无法混用。")]),t._v(" "),s("p",[t._v("通过添加方法可以为新类型添加行为")]),t._v(" "),s("h3",{attrs:{id:"package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[t._v("#")]),t._v(" package")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("包名与导入路径的最后一个元素一致。例如，"),s("code",[t._v('"math/rand"')]),t._v(" 包中的源码均以 "),s("code",[t._v("package rand")]),t._v(" 语句开始")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math/rand"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My favorite number is"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])]),t._v(" "),s("li",[s("p",[t._v("在 Go 中，如果一个名字以大写字母开头，那么它就是已导出的。在导入一个包时，你只能引用其中已导出的名字。任何“未导出”的名字在该包外均无法访问。")])])]),t._v(" "),s("h3",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("函数的零值为"),s("code",[t._v("nil")])]),t._v(" "),s("h4",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("p",[t._v("函数需要为参数添加类型，如果多个类型值一致，那么可以省略除了最后一个参数的类型声明")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\nx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n")])])]),s("p",[t._v("多个参数使用"),s("code",[t._v("...")]),t._v("表示，例如："),s("code",[t._v("main(a...int)")])]),t._v(" "),s("p",[t._v("函数的参数总是传递参数的副本")]),t._v(" "),s("h4",{attrs:{id:"返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),s("p",[t._v("函数可以返回任意数量的返回值")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("命名返回值： "),s("code",[t._v("return")]),t._v("空时， 返回已命名的返回值。也就是 "),s("code",[t._v("直接")]),t._v(" 返回。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n\ty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" x\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"方法关联类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法关联类型"}},[t._v("#")]),t._v(" 方法关联类型")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("celsius")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此处的k称为接收者，每个方法只能有一个接收者,接收者传入类型为test类型，方法调用方式：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("celsius")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test也可以为test类型的变量")]),t._v("\n")])])]),s("p",[t._v("celsius方法接收到的参数第一个为接收者k，剩下的为函数声明参数")]),t._v(" "),s("h4",{attrs:{id:"方法的转发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的转发"}},[t._v("#")]),t._v(" 方法的转发")]),t._v(" "),s("p",[t._v("还可以在方法中调用接收者中的字段的方法")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("average")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" celsius"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("high"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r report"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("average")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" celsius"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("average")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用report类型中temp字段的方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这种写法比较繁琐，可以使用struct的嵌入，类型自动关联字段的方法")]),t._v(" "),s("h4",{attrs:{id:"方法的接收者与指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的接收者与指针"}},[t._v("#")]),t._v(" 方法的接收者与指针")]),t._v(" "),s("p",[t._v("方法的接收者处理指针是与函数的参数基本类似的，会解引用，但是接收类型要为指针类型。如果有一个方法接收指针类型，那么其他方法也应该如此")]),t._v(" "),s("h3",{attrs:{id:"基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[t._v("#")]),t._v(" 基本类型")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("变量使用var定义，可以出现在包或者函数级别")])]),t._v(" "),s("li",[s("p",[t._v("同时声明多个变量时，如果类型相同，可以只给最后一个变量添加类型定义")])]),t._v(" "),s("li",[s("p",[t._v("初始化，初始化时有值的情况可以省略类型定义")])]),t._v(" "),s("li",[s("p",[t._v("短声明，在"),s("strong",[t._v("函数")]),t._v("中，简洁赋值语句，"),s("code",[t._v(":=")]),t._v("可在类型明确的地方代替"),s("code",[t._v("var")]),t._v("声明。短声明只能用在函数内")])]),t._v(" "),s("li",[s("p",[t._v("函数外的每个语句都必须以关键字开始，"),s("code",[t._v("var,func")]),t._v("等等")])]),t._v(" "),s("li",[s("p",[t._v("变量声明也可以像导入语句一样分组成一个语法块")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tToBe   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\tMaxInt "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\tz      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex128")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cmplx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12i")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("类型转换：表达式 "),s("code",[t._v("T(v)")]),t._v(" 将值 "),s("code",[t._v("v")]),t._v(" 转换为类型 "),s("code",[t._v("T")]),t._v("。Go 在不同类型的项之间赋值时需要显式转换")])]),t._v(" "),s("li",[s("p",[t._v("值为单引号和双引号的区别，单引号为一个字符，惯上用它来区别字符值和整数值，双引号表示字符串字面量，支持转义，不想转义使用反引号`")])])]),t._v(" "),s("h4",{attrs:{id:"整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整数"}},[t._v("#")]),t._v(" 整数")]),t._v(" "),s("ol",[s("li",[t._v("int，int和uint都是与架构有关的")]),t._v(" "),s("li",[t._v("uint,无符号整数类型")]),t._v(" "),s("li",[t._v("unit8,可以用来表示css颜色，因为取值范围相同（0-255）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-pic.oss-cn-beijing.aliyuncs.com/image-20210630161106786.png",alt:"image-20210630161106786"}})]),t._v(" "),s("h4",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("const")]),t._v("声明，不能使用"),s("code",[t._v(":=")]),t._v("声明。常量可以是字符、字符串、布尔值或数值,甚至也可以没有类型(untyped)")]),t._v(" "),s("p",[t._v("常量不能修改")]),t._v(" "),s("h4",{attrs:{id:"零值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#零值"}},[t._v("#")]),t._v(" 零值")]),t._v(" "),s("p",[t._v("没有明确初始值的变量声明会被赋予他们的零值。零值是：")]),t._v(" "),s("ul",[s("li",[t._v("数值类型为 "),s("code",[t._v("0")]),t._v("，")]),t._v(" "),s("li",[t._v("布尔类型为 "),s("code",[t._v("false")]),t._v("，")]),t._v(" "),s("li",[t._v("字符串为 "),s("code",[t._v('""')]),t._v("（空字符串）。")])]),t._v(" "),s("h4",{attrs:{id:"int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[t._v("#")]),t._v(" int")]),t._v(" "),s("p",[s("code",[t._v("int")]),t._v(", "),s("code",[t._v("uint")]),t._v(" 和 "),s("code",[t._v("uintptr")]),t._v(" 在 32 位系统上通常为 32 位宽，在 64 位系统上则为 64 位宽。 当你需要一个整数值时应使用 "),s("code",[t._v("int")]),t._v(" 类型，除非你有特殊的理由使用固定大小或无符号的整数类型。")]),t._v(" "),s("h4",{attrs:{id:"int32"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int32"}},[t._v("#")]),t._v(" int32")]),t._v(" "),s("p",[t._v("int32的类型别名为"),s("code",[t._v("rune")])]),t._v(" "),s("h4",{attrs:{id:"uint8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uint8"}},[t._v("#")]),t._v(" uint8")]),t._v(" "),s("p",[t._v("uint8的别名是"),s("code",[t._v("byte")]),t._v(",目的是用于二进制数据")]),t._v(" "),s("h4",{attrs:{id:"boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" boolean")]),t._v(" "),s("p",[t._v("布尔值只有true和false")]),t._v(" "),s("h4",{attrs:{id:"float"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[t._v("#")]),t._v(" float")]),t._v(" "),s("p",[t._v("浮点类型可以表达的值大于uint64最大值")]),t._v(" "),s("h4",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" string")]),t._v(" "),s("p",[t._v("string可以看做是一种特殊的slice类型，获取长度可以使用len")]),t._v(" "),s("h3",{attrs:{id:"其他类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他类型"}},[t._v("#")]),t._v(" 其他类型")]),t._v(" "),s("h4",{attrs:{id:"big"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#big"}},[t._v("#")]),t._v(" Big")]),t._v(" "),s("p",[t._v("一旦使用了big.int，那么等式里其他部分也必须使用"),s("code",[t._v("big.int")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("big"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12312311231232113123123'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("无类型数字常量是由big来处理")]),t._v(" "),s("h4",{attrs:{id:"结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体"}},[t._v("#")]),t._v(" 结构体")]),t._v(" "),s("p",[t._v("类似于ts中的"),s("code",[t._v("interface")]),t._v("，结构体中的属性称为结构体字段")]),t._v(" "),s("h4",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("p",[t._v("数组长度由创建时定义，不可再改变。")]),t._v(" "),s("p",[t._v("使用复合字面值初始化数组："),s("code",[t._v('dwarfs :=[5]string{"dfs","dfs","dfs","dfs","dfs"}')]),t._v(",还可以使用"),s("code",[t._v("...")]),t._v("作为数组的长度，go编译器会为你算出数组的元素数量"),s("code",[t._v('dwarfs :=[...]string{"dfs","dfs","dfs","dfs","dfs"}')])]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("len(arr)")]),t._v("可以查看数组的长度，使用"),s("code",[t._v("cap(arr)")]),t._v("可以查看数组的容量,数组的零值为"),s("code",[t._v("nil")])]),t._v(" "),s("p",[t._v("数组赋值给新的变量或者传递给函数时都会产生一个新的数组副本，所以性能会比较低，一般使用切片作为参数而不是数组。")]),t._v(" "),s("p",[s("strong",[t._v("切片")])]),t._v(" "),s("p",[t._v("数组支持切片操作，切片只是对引用的描述，修改值会影响原数组，以下切片写法是等价的：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("a[0:10]\na[:10]\na[0:]\na[:]\n")])])]),s("p",[t._v("切片的默认值是"),s("code",[t._v("nil")])]),t._v(" "),s("p",[t._v("切片的索引不能是负数")]),t._v(" "),s("p",[t._v("切片添加值使用"),s("code",[t._v("append")])]),t._v(" "),s("p",[t._v("切片操作也可以用于字符串")]),t._v(" "),s("p",[t._v("使用3索引可以限制切片的容量，例如："),s("code",[t._v("ter:=planets[0:4:4]")])]),t._v(" "),s("p",[t._v("可以单独声明slice:"),s("code",[t._v('dwarfs :=[]string{"test","test","test","test"}')]),t._v(",也就是没有长度的数组形式。")]),t._v(" "),s("blockquote",[s("p",[t._v("文章："),s("a",{attrs:{href:"https://blog.go-zh.org/go-slices-usage-and-internals",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 切片：用法和本质"),s("OutboundLink")],1)])]),t._v(" "),s("h4",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map")]),t._v(" "),s("p",[t._v("map默认值为"),s("code",[t._v("nil")]),t._v(", map声明"),s("code",[t._v("map[string]int")]),t._v(",这里的string表示key的类型，而int表示值的类型。访问key只能通过"),s("code",[t._v("[]")]),t._v(",在访问map中的key时，如果不确定是否有值，那么可以通过返回值的第二个值进行判断：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("moon"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" moon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ok"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("moon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ok "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"存在"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不存在"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以使用make指定map的容量"),s("code",[t._v("m := make(map[string]int, 99)")])]),t._v(" "),s("h4",{attrs:{id:"struct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#struct"}},[t._v("#")]),t._v(" struct")]),t._v(" "),s("p",[t._v("结构体，类似于class,不是引用类型。访问字段使用"),s("code",[t._v(".")]),t._v("，声明结构体变量")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" curiosity "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("声明struct类型")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" location "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  b "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("通过复合字面值初始化struct")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 键值对形式可以不按照顺序赋值")]),t._v("\ntest"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按照结构体字段顺序赋值")]),t._v("\n")])])]),s("p",[t._v("转换成json，默认只转换出大写开头的，如果想要自定义，那么需要在后边加上额外内容(tag)：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" location "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Lat "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"latitude"xml:"latitude" binding:"-"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -表示忽略该校验")]),t._v("\n  Long "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"longitude" binding:"required"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binding required表示必须传该值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("约定，如果方法以"),s("code",[t._v("new")]),t._v("开头，后边是结构体，那么通常是用来构造数据的，例如"),s("code",[t._v("newPerson")])]),t._v(" "),s("p",[s("strong",[t._v("嵌入")])]),t._v(" "),s("p",[t._v("struct中通过组合的方式拆分关联度比较高的字段成为一个新类型：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" location "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  style style\n  color unit8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" style "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  width "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  height "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("还有一种简写的写法，叫做嵌入：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" location "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  style\n  color unit8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" style "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  width "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  height "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用嵌入的写法会将组合字段的方法加入struct，比如style 有个"),s("code",[t._v("calculation")]),t._v("方法，这个时候location也可以直接使用："),s("code",[t._v("location.calculation()")]),t._v("，还可以直接使用字段"),s("code",[t._v("location.width")]),t._v(",这种行为称为转发。")]),t._v(" "),s("p",[t._v("当命名冲突时，不能使用这种简写，还是要使用"),s("code",[t._v("location.style.width")]),t._v(",当最外层struct中有同名方法时，则程序会优先使用该方法。")]),t._v(" "),s("h4",{attrs:{id:"interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interface"}},[t._v("#")]),t._v(" interface")]),t._v(" "),s("p",[t._v("声明为接口类型的变量默认值为"),s("code",[t._v("nil")]),t._v(",接口类型的变量只有在类型和值都为nil时才 等于"),s("code",[t._v("nil")])]),t._v(" "),s("p",[t._v("接口关注与类型可以做什么，而不是储存了什么。")]),t._v(" "),s("p",[t._v("接口通过列举类型必须满足的一组方法来进行声明。")]),t._v(" "),s("p",[t._v("不需要显示声明接口。")]),t._v(" "),s("p",[t._v("通常声明interface类型的时候习惯使用"),s("code",[t._v("er")]),t._v("结尾")]),t._v(" "),s("h4",{attrs:{id:"指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指针"}},[t._v("#")]),t._v(" 指针")]),t._v(" "),s("p",[t._v("为什么要用指针？")]),t._v(" "),s("ol",[s("li",[t._v("指针可以帮助函数在内部修改外部变量的值，还可以帮助我们在任何地方修改其指向数据的值。")]),t._v(" "),s("li",[t._v("传递指针参数可以节省拷贝大结构体的内存开销")])]),t._v(" "),s("p",[t._v("通过&操作符可以获取变量的内存地址。")]),t._v(" "),s("p",[s("strong",[t._v("内部指针")]),t._v("："),s("code",[t._v("&")]),t._v("不仅可以获得结构体的内存地址，还可以获得其中字段的内存地址。")]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v("放在类型前面表示指针类型，指针不能直接赋值给其他类型，只能赋值给"),s("code",[t._v("*type")])]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v("放在变量前面表示解引用,只能用在值为指针类型的变量上,或者复合字面量："),s("code",[t._v('timmy:=&person{name:"Timothy",age:10}')]),t._v(",访问字段时，对结构体进行解引用不是必须的。数组在执行索引或切片操作时会自动解引用。slice和map的复合字面值没有自动解引用的功能。")]),t._v(" "),s("p",[s("strong",[t._v("隐式指针")]),t._v("：go语言里有一些内置的集合类型就在暗中使用指针。map在被赋值或者作为参数传递的时候不回被复制。")]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("nil")]),t._v("解引用会引起程序恐慌，导致报错")]),t._v(" "),s("blockquote",[s("p",[t._v("文章："),s("a",{attrs:{href:"https://studygolang.com/articles/32103",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么时候使用指针？"),s("OutboundLink")],1)])]),t._v(" "),s("h4",{attrs:{id:"channel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#channel"}},[t._v("#")]),t._v(" Channel")]),t._v(" "),s("p",[t._v("通道可以在多个goroutine之间安全的传值")]),t._v(" "),s("p",[t._v("通道可以用作变量、函数参数、结构体字段等等")]),t._v(" "),s("p",[t._v("创建通道用make函数"),s("code",[t._v("c:=make(chan int)")]),t._v("。不使用make初始化通道，那么通道变量的值就是nil。对nil通道进行发送或接收不回引起panic，但会导致永久阻塞。对nil通道执行close函数，那么会引起panic。")]),t._v(" "),s("p",[t._v("向通道发送或者接收值使用"),s("code",[t._v("<-")]),t._v("符号，发送值例子："),s("code",[t._v("c<-99")]),t._v("，从通道接收值例子："),s("code",[t._v("r:=<-c")])]),t._v(" "),s("p",[t._v("接收或者发送值到通道时会阻塞当前线程运行。")]),t._v(" "),s("p",[s("strong",[t._v("缓冲channel")])]),t._v(" "),s("p",[t._v("通过在make创建channel时，添加缓冲区，可以在之后才阻塞线程："),s("code",[t._v("cha:=make(chan int,4)")])]),t._v(" "),s("h3",{attrs:{id:"流程控制语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程控制语句"}},[t._v("#")]),t._v(" 流程控制语句")]),t._v(" "),s("h4",{attrs:{id:"for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" for循环")]),t._v(" "),s("p",[t._v("Go只有一种循环结构：for循环。")]),t._v(" "),s("p",[t._v("基本的 "),s("code",[t._v("for")]),t._v(" 循环由三部分组成，它们用分号隔开：")]),t._v(" "),s("ul",[s("li",[t._v("初始化语句：在第一次迭代前执行,可选")]),t._v(" "),s("li",[t._v("条件表达式：在每次迭代前求值")]),t._v(" "),s("li",[t._v("后置语句：在每次迭代的结尾执行，可选")])]),t._v(" "),s("p",[t._v("还可以省略掉"),s("code",[t._v(";")]),t._v("，只使用for，当 作"),s("code",[t._v("while")]),t._v("使用：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tsum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tsum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" sum\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("数组和字符串、channel遍历都可以使用："),s("code",[t._v("for i := range arr")]),t._v("。")]),t._v(" "),s("p",[t._v("range还可以用来遍历chanl，直到通道关闭位置")]),t._v(" "),s("h4",{attrs:{id:"if语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[t._v("#")]),t._v(" if语句")]),t._v(" "),s("p",[s("code",[t._v("if")]),t._v("支持简短语句，在表达式之前执行一个简单的语句，该语句声明的变量作用域仅在"),s("code",[t._v("if")]),t._v("之内,或者else。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lim "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" lim "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" v\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lim\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"switch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[t._v("#")]),t._v(" switch")]),t._v(" "),s("p",[t._v("只运行选定的case，不需要break，除非以 "),s("code",[t._v("fallthrough")]),t._v(" 语句结束，否则分支会自动终止。case 无需为常量，且取值不必为整数。")]),t._v(" "),s("p",[s("code",[t._v("switch")]),t._v("可以没有条件，同switch true一样")]),t._v(" "),s("h4",{attrs:{id:"defer-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defer-2"}},[t._v("#")]),t._v(" defer")]),t._v(" "),s("p",[t._v("defer 语句会将函数推迟到外层函数返回之后执行。")]),t._v(" "),s("p",[t._v("推迟的函数调用会被压入一个栈中。当外层函数返回时，被推迟的函数会按照后进先出的顺序调用。")]),t._v(" "),s("h3",{attrs:{id:"结构体-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体-2"}},[t._v("#")]),t._v(" 结构体")]),t._v(" "),s("p",[t._v("类似于js中的class，结构体字段使用点号来访问：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Vertex "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tX "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tY "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" Vertex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("X "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"内置函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置函数"}},[t._v("#")]),t._v(" 内置函数")]),t._v(" "),s("p",[t._v("内置函数不需要"),s("code",[t._v("import")])]),t._v(" "),s("h4",{attrs:{id:"len"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#len"}},[t._v("#")]),t._v(" len")]),t._v(" "),s("p",[t._v("查看字符串字节长度")]),t._v(" "),s("h4",{attrs:{id:"cap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cap"}},[t._v("#")]),t._v(" cap")]),t._v(" "),s("p",[t._v("查看切片容量，如果append后超过原容量，那么会产生一个新数组，容量为之前容量的2倍")]),t._v(" "),s("h4",{attrs:{id:"append"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#append"}},[t._v("#")]),t._v(" append")]),t._v(" "),s("p",[t._v("添加slice，"),s("code",[t._v("test=append(a,1)")]),t._v(",合并其他slice，使用"),s("code",[t._v("...")]),t._v(" ，"),s("code",[t._v("test=append(a,anthorSlice...)")])]),t._v(" "),s("h4",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" delete")]),t._v(" "),s("p",[t._v("删除map中的key")]),t._v(" "),s("h4",{attrs:{id:"make"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make"}},[t._v("#")]),t._v(" make")]),t._v(" "),s("p",[t._v("动态创建切片、map、channel,make返回类型的引用。make和new都是用来分配内存的内建函数，且在堆上分配内存，make即分配内存，也初始化内存。new只是将内存清零，new返回的是指向类型的指针，new可以分配任意类型。")]),t._v(" "),s("h4",{attrs:{id:"close"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#close"}},[t._v("#")]),t._v(" Close")]),t._v(" "),s("p",[t._v("关闭chanl")]),t._v(" "),s("h2",{attrs:{id:"mod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mod"}},[t._v("#")]),t._v(" mod")]),t._v(" "),s("p",[t._v("init指令后边指定的是该项目的包名称,执行之后生成"),s("code",[t._v("go.mod")]),t._v("文件,该文件包含包名和使用的go的版本：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module main\ngo 1.16\n")])])]),s("h3",{attrs:{id:"go-get"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go-get"}},[t._v("#")]),t._v(" go get")]),t._v(" "),s("p",[t._v("已有项目如果想安装所有的包，那么使用"),s("code",[t._v("go get")]),t._v("获取")]),t._v(" "),s("h2",{attrs:{id:"package-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package-2"}},[t._v("#")]),t._v(" package")]),t._v(" "),s("p",[t._v("大写字母开头的函数、变量或其他标识符都会被导出。小写字母开头的就不行,当导入包后。")]),t._v(" "),s("p",[t._v("包的入口函数为"),s("code",[t._v("main")]),t._v(",如果没有在程序中使用，则会触发"),s("code",[t._v("init")]),t._v("函数")]),t._v(" "),s("p",[s("code",[t._v("import")]),t._v("本地包时使用的是目录位置，比如说："),s("code",[t._v("main/dao")]),t._v("，则是导入"),s("code",[t._v("dao")]),t._v("这个文件夹下的所有包")]),t._v(" "),s("p",[t._v("一个文件夹下的所有包的"),s("code",[t._v("package")]),t._v("必须同名")]),t._v(" "),s("h3",{attrs:{id:"embed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#embed"}},[t._v("#")]),t._v(" embed")]),t._v(" "),s("p",[t._v("文件嵌入到程序中，可以使用在web开发时的静态资源打包。需要"),s("code",[t._v("go v1.16")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embed"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html/template"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io/fs"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/gin-gonic/gin"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed static/* templates/*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f embed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FS\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfsys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"static"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttempl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Must")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParseFS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"templates/*.tmpl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"templates/home/*.tmpl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetHTMLTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("templ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StaticFS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/static/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fsys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HTML")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.tmpl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/search"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"q"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[t._v("#")]),t._v(" strings")]),t._v(" "),s("h4",{attrs:{id:"join-arr-string-sep-string-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join-arr-string-sep-string-string"}},[t._v("#")]),t._v(" Join(arr []string, sep string) string")]),t._v(" "),s("p",[t._v("根据片段拆分成字符串")]),t._v(" "),s("h4",{attrs:{id:"compare-str1-str2-int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compare-str1-str2-int"}},[t._v("#")]),t._v(" Compare(str1,str2) int")]),t._v(" "),s("p",[t._v("比较两个字符串，如果相等则返回0，str1小于str2则返回-1，大于返回1")]),t._v(" "),s("h4",{attrs:{id:"equalfold-str1-str2-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#equalfold-str1-str2-bool"}},[t._v("#")]),t._v(" EqualFold(str1,str2) bool")]),t._v(" "),s("p",[t._v("计算 s 与 t 忽略字母大小写后是否相等。")]),t._v(" "),s("h3",{attrs:{id:"strconv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strconv"}},[t._v("#")]),t._v(" strconv")]),t._v(" "),s("p",[t._v("实现转换相关功能")]),t._v(" "),s("h3",{attrs:{id:"fmt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fmt"}},[t._v("#")]),t._v(" fmt")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出单个字符。\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出十进制整数。\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出十进制浮点数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%o"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出八进制数。\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出字符串。\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%u"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出无符号十进制数。\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输出十六进制数。\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%v"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输入a的值\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%+v"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输入a的声明值，包含key\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%T"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；输入a的类型\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 格式化拼接字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello astaxie!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 将第二个参数写入到第一个参数，第一个参数为"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`io.Writter`")]),t._v("类型\n")])])]),s("h3",{attrs:{id:"unicode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unicode"}},[t._v("#")]),t._v(" unicode")]),t._v(" "),s("h4",{attrs:{id:"utf8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utf8"}},[t._v("#")]),t._v(" utf8")]),t._v(" "),s("p",[s("code",[t._v("utf8.RuneCountInString")]),t._v("可以用来查看字符串中字符个数")]),t._v(" "),s("h4",{attrs:{id:"math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" math")]),t._v(" "),s("p",[t._v("math."),s("a",{attrs:{href:"https://golang.org/src/math/floor.go?s=933:962#L38",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trunc"),s("OutboundLink")],1),t._v(" 返回float64的整数值")]),t._v(" "),s("h3",{attrs:{id:"encoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#encoding"}},[t._v("#")]),t._v(" encoding")]),t._v(" "),s("h4",{attrs:{id:"json-marshal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-marshal"}},[t._v("#")]),t._v(" json.Marshal")]),t._v(" "),s("p",[t._v("把任何类型转换为byte类型")]),t._v(" "),s("h4",{attrs:{id:"json-unmarshal-body-result"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-unmarshal-body-result"}},[t._v("#")]),t._v(" json.Unmarshal(body, &result)")]),t._v(" "),s("p",[t._v("转换第一个参数为json格式，赋值给resutl变量")]),t._v(" "),s("h3",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" http")]),t._v(" "),s("h4",{attrs:{id:"client"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#client"}},[t._v("#")]),t._v(" client")]),t._v(" "),s("p",[t._v("可以统一为其他请求进行预设，一般为header的设置。client.Get和client.Post是对client.NewRequest的包装")]),t._v(" "),s("p",[t._v("设置好client后，需要client.Do()发送请求")]),t._v(" "),s("h4",{attrs:{id:"type-request"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-request"}},[t._v("#")]),t._v(" type Request")]),t._v(" "),s("p",[s("strong",[t._v("Request.ParseForm()")])]),t._v(" "),s("p",[t._v("解析原始请求query，默认不解析，解析后request.Form为map类型的query,value的值为数组")]),t._v(" "),s("p",[t._v("如果不解析Form，则Form值为"),s("code",[t._v("[]")])]),t._v(" "),s("p",[t._v("Request本身也提供了FormValue函数来获取参数，例如"),s("code",[t._v('r.Form["username"]')]),t._v("也可以写成"),s("code",[t._v('r.FormValue("username")')]),t._v("。调用"),s("code",[t._v("r.FormValue")]),t._v("时会自动调用"),s("code",[t._v("r.ParseForm")]),t._v(",所以不用提前调用。"),s("code",[t._v("r.FormValue")]),t._v("只会返回同名参数中的第一个，若不存在则返回空字符串。")]),t._v(" "),s("p",[s("code",[t._v("r.Form")]),t._v(" 对不同类型的表单元素的留空有不同的处理， 对于空文本框、空文本区域以及文件上传，元素的值为空值，而如果是未选中的复选框和单选按钮，则根本不会在 r.Form 中产生相应条目，如果我们用上面例子中的方式去获取数据时程序就会报错。所以我们需要通过 r.Form.Get() 来获取值，因为如果字段不存在，通过该方式获取的是空值。但是通过 r.Form.Get() 只能获取单个的值，")]),t._v(" "),s("h4",{attrs:{id:"listenandserve"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#listenandserve"}},[t._v("#")]),t._v(" ListenAndServe")]),t._v(" "),s("p",[t._v("启动服务，会阻塞程序运行。")]),t._v(" "),s("h3",{attrs:{id:"html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" html")]),t._v(" "),s("h4",{attrs:{id:"template"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[t._v("#")]),t._v(" template")]),t._v(" "),s("p",[t._v("解析模版的几种方法：")]),t._v(" "),s("ol",[s("li",[t._v("Prase")]),t._v(" "),s("li",[t._v("ParseFiles")]),t._v(" "),s("li",[t._v("ParseGlob")]),t._v(" "),s("li",[t._v("New")])]),t._v(" "),s("p",[t._v("模版渲染：")]),t._v(" "),s("ol",[s("li",[t._v("Execute")]),t._v(" "),s("li",[t._v("ExecuteTemplate,当解析多个模版需要指定模版名称时，使用这个方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("由于vuepress的问题，所有双括号都变成单括号")])]),t._v(" "),s("p",[s("strong",[t._v("模版语法")])]),t._v(" "),s("ol",[s("li",[t._v("变量："),s("code",[t._v("{$ojb:=100}")])]),t._v(" "),s("li",[t._v("去除左右空格： "),s("code",[t._v("{- .u1.Name -}")])]),t._v(" "),s("li",[t._v("判断：")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$v1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n啥都没有\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("作用域："),s("code",[t._v("with")])]),t._v(" "),s("li",[t._v("取数组索引："),s("code",[t._v("index")])]),t._v(" "),s("li",[t._v("遍历："),s("code",[t._v("range")])]),t._v(" "),s("li",[t._v("自定义函数：扩展原template，添加自定义函数时，如果两个参数，第二个一定是错误类型，添加自定义函数的时机一定要在解析模版之前。模版解析时会自动转义，如果不想自动转义那么使用"),s("code",[t._v("template.HTML()")]),t._v("处理")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Funcs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FuncMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParseFiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./f.tmpl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[s("p",[t._v("嵌套模版："),s("code",[t._v('{template "ul.tmpl"}')]),t._v("，可以使用外部文件，也可以使用内部"),s("code",[t._v("define")]),t._v("定义的模版 ,嵌套模版解析时，一定要按照包含顺序解析。")])]),t._v(" "),s("li",[s("p",[t._v("定义模版：")])])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" define "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ol.tmpl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ol"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("吃饭"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ol"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"10"}},[s("li",[t._v("继承：如果很多页面中存在很多不变共通部分，类似于布局相关的元素，那么可以使用根模版"),s("code",[t._v("block")])]),t._v(" "),s("li",[t._v("模板到模板：只能传递一个变量，但是可以通过自定义函数来合并多个参数。参考：https://stackoverflow.com/a/49475057/13082513")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shops "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Destination"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cityName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" regionName "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shops"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      shops"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CityName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   cityName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RegionName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" regionName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Wrap "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Shops $city $region"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"12"}},[s("li",[t._v("模板传递对象参数,通过传递json字符串可以达到使用对象的效果：")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("ParseJSON "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonString "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tjson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Unmarshal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"component/block-title"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`{"title":"你好"}`')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"13"}},[s("li",[t._v("修改默认标识符："),s("code",[t._v('template.New("test").Delims("{[","]}").ParseFiles("./t.tmpl")')])])]),t._v(" "),s("blockquote",[s("ol",[s("li",[s("a",{attrs:{href:"https://liwenzhou.com/posts/Go/go_template/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go语言标准库之http/template"),s("OutboundLink")],1)])])]),t._v(" "),s("h3",{attrs:{id:"io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#io"}},[t._v("#")]),t._v(" io")]),t._v(" "),s("h4",{attrs:{id:"ioutil-readdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioutil-readdir"}},[t._v("#")]),t._v(" ioutil.ReadDir")]),t._v(" "),s("p",[t._v("读取当前目录")]),t._v(" "),s("h4",{attrs:{id:"ioutil-readall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioutil-readall"}},[t._v("#")]),t._v(" ioutil.ReadAll")]),t._v(" "),s("p",[t._v("一次性读取所有返回")]),t._v(" "),s("h3",{attrs:{id:"os"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#os"}},[t._v("#")]),t._v(" os")]),t._v(" "),s("h4",{attrs:{id:"create"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[t._v("#")]),t._v(" Create")]),t._v(" "),s("p",[t._v("创建文件")]),t._v(" "),s("h3",{attrs:{id:"sync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sync"}},[t._v("#")]),t._v(" sync")]),t._v(" "),s("h4",{attrs:{id:"mutex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutex"}},[t._v("#")]),t._v(" mutex")]),t._v(" "),s("p",[t._v("互斥锁,定义在被保护的变量之上，一个已经被锁定的goroutine再次被锁定则会引发死锁。")]),t._v(" "),s("h3",{attrs:{id:"time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#time"}},[t._v("#")]),t._v(" time")]),t._v(" "),s("h4",{attrs:{id:"now"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#now"}},[t._v("#")]),t._v(" Now()")]),t._v(" "),s("p",[t._v("当前时间")]),t._v(" "),s("h4",{attrs:{id:"since-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#since-time"}},[t._v("#")]),t._v(" Since(time)")]),t._v(" "),s("p",[t._v("获取参数到当前时间之差")]),t._v(" "),s("h4",{attrs:{id:"sleep-time-second"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sleep-time-second"}},[t._v("#")]),t._v(" Sleep(time.Second)")]),t._v(" "),s("p",[t._v("睡眠几秒")]),t._v(" "),s("h2",{attrs:{id:"gin框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gin框架"}},[t._v("#")]),t._v(" Gin框架")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("web服务框架")]),t._v(" "),s("h4",{attrs:{id:"中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[t._v("#")]),t._v(" 中间件")]),t._v(" "),s("p",[t._v("Gin中的中间件必须是一个"),s("code",[t._v("gin.HandlerFunc")]),t._v("类型,普通的请求方法参数中从第二个开始都是中间件，按照写入顺序执行。中间件一般会写成闭包的形式，这样写的好处在于，可以做一些准备工作或者接受配置，这样就不用在具体中间件中写一堆判断了。")]),t._v(" "),s("p",[t._v("如果要在gin中使用goroutine，那么不应该goroutine中修改gin的上下文，只能使用gin上下文的副本。")]),t._v(" "),s("h3",{attrs:{id:"初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),s("p",[t._v("安装： "),s("code",[t._v("go get -u github.com/gin-gonic/gin")])]),t._v(" "),s("p",[t._v("引入："),s("code",[t._v('import ("github.com/gin-gonic/gin")')])]),t._v(" "),s("h3",{attrs:{id:"default"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#default"}},[t._v("#")]),t._v(" Default()")]),t._v(" "),s("p",[t._v("默认使用了"),s("code",[t._v("Logger")]),t._v("和"),s("code",[t._v("Recovery")]),t._v("中间件，"),s("code",[t._v("Logger")]),t._v("将日志写入gin.DefaultWriter,即使设置了GIN_MODE=realease。")]),t._v(" "),s("p",[s("code",[t._v("Recovery")]),t._v("中间会recover任何panic。如果有panic的话，会写入500响应码")]),t._v(" "),s("h3",{attrs:{id:"new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new"}},[t._v("#")]),t._v(" New()")]),t._v(" "),s("p",[t._v("如果不想使用Default则使用New创建一个没有中间件的路由")]),t._v(" "),s("h3",{attrs:{id:"engine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#engine"}},[t._v("#")]),t._v(" Engine")]),t._v(" "),s("p",[t._v("Gin实例")]),t._v(" "),s("h4",{attrs:{id:"maxmultipartmemory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxmultipartmemory"}},[t._v("#")]),t._v(" MaxMultipartMemory")]),t._v(" "),s("p",[t._v("设置处理提交文件时默认的内存限制，小于这个限制的内容保存在内存中，大于这个限制的超出部分保存在本地临时文件中")]),t._v(" "),s("h4",{attrs:{id:"run-port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-port"}},[t._v("#")]),t._v(" Run(port)")]),t._v(" "),s("p",[t._v("启动服务")]),t._v(" "),s("h4",{attrs:{id:"loadhtmlfiles-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loadhtmlfiles-files"}},[t._v("#")]),t._v(" loadHTMLFiles(files)")]),t._v(" "),s("p",[t._v("加载模版")]),t._v(" "),s("h4",{attrs:{id:"setfuncmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setfuncmap"}},[t._v("#")]),t._v(" SetFuncMap")]),t._v(" "),s("p",[t._v("添加自定义函数")]),t._v(" "),s("h4",{attrs:{id:"static-relativepath-root"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static-relativepath-root"}},[t._v("#")]),t._v(" Static(relativePath,root)")]),t._v(" "),s("p",[t._v("定义静态文件地址,第一个参数为代码中使用的假名，第二个参数为假名指向的服务器真实目录")]),t._v(" "),s("h4",{attrs:{id:"any-path-func"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#any-path-func"}},[t._v("#")]),t._v(" Any(path,func)")]),t._v(" "),s("p",[t._v("除了"),s("code",[t._v("post、get")]),t._v("等方法处理请求，还可以使用Any处理所有方法,通过"),s("code",[t._v("context.Request.Method")]),t._v("判断该请求是哪种方法")]),t._v(" "),s("h4",{attrs:{id:"noroute-func"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#noroute-func"}},[t._v("#")]),t._v(" NoRoute(func)")]),t._v(" "),s("p",[t._v("处理没有接收的请求")]),t._v(" "),s("h4",{attrs:{id:"group-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#group-name"}},[t._v("#")]),t._v(" Group(name)")]),t._v(" "),s("p",[t._v("路由组，管理不同业务类型的路由时，使用分组可以保证结构清晰，支持嵌套")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tuserGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码块可以不加，添加是为了看着直观")]),t._v("\n\t\tuserGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tuserGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tuserGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tshopGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/shop"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tshopGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tshopGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/cart"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tshopGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/checkout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"use-middlerware-handlefunc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-middlerware-handlefunc"}},[t._v("#")]),t._v(" Use(middlerware...handleFunc)")]),t._v(" "),s("p",[t._v("全局注册中间件，先于请求中的中间件执行。所有请求都会触发该中间件")]),t._v(" "),s("h3",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" Context")]),t._v(" "),s("h4",{attrs:{id:"copy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[t._v("#")]),t._v(" Copy()")]),t._v(" "),s("p",[t._v("创建一个当前上下文的副本")]),t._v(" "),s("h4",{attrs:{id:"html-code-name-obj"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-code-name-obj"}},[t._v("#")]),t._v(" HTML(code,name,obj)")]),t._v(" "),s("p",[t._v("渲染模版,需要先加载模版后才能使用。参数：状态吗，模版名称，渲染参数")]),t._v(" "),s("h4",{attrs:{id:"json-code-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-code-data"}},[t._v("#")]),t._v(" JSON(code,data)")]),t._v(" "),s("p",[t._v("传输json格式数据")]),t._v(" "),s("h4",{attrs:{id:"query-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-key"}},[t._v("#")]),t._v(" Query(key)")]),t._v(" "),s("p",[t._v("获取请求对应key的querystring")]),t._v(" "),s("h4",{attrs:{id:"defaultquery-key-defaultvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defaultquery-key-defaultvalue"}},[t._v("#")]),t._v(" DefaultQuery(key,defaultValue)")]),t._v(" "),s("p",[t._v("类似于Query，但是提供默认值")]),t._v(" "),s("h4",{attrs:{id:"getquery-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getquery-key"}},[t._v("#")]),t._v(" GetQuery(key)")]),t._v(" "),s("p",[t._v("类似于Query，返回参数多了一个是否存在，如果不存在返回false")]),t._v(" "),s("h4",{attrs:{id:"param-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#param-path"}},[t._v("#")]),t._v(" Param(path)")]),t._v(" "),s("p",[t._v("当路由为动态路由时，使用Param(path)获取动态路由的id")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Default返回一个默认的路由引擎")]),t._v("\n\tr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/user/search/:username/:address"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tusername "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\taddress "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出json结果给调用方")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8080"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"postform-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postform-key"}},[t._v("#")]),t._v(" PostForm(key)")]),t._v(" "),s("p",[t._v("如果请求为post类型的form表单数据时，通过PostForm(key)获取value，"),s("code",[t._v("DefaultPostForm")]),t._v("还可以添加默认值")]),t._v(" "),s("h4",{attrs:{id:"bindjson"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bindjson"}},[t._v("#")]),t._v(" BindJSON")]),t._v(" "),s("p",[t._v("解析参数")]),t._v(" "),s("h4",{attrs:{id:"shouldbind-struct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shouldbind-struct"}},[t._v("#")]),t._v(" ShouldBind(* struct)")]),t._v(" "),s("p",[t._v("简写取参数的动作，直接从结构体中绑定querystring中相对应的参数,参数接收指针类型的结构体，无论前端传的是哪种"),s("code",[t._v("Content-Type")]),t._v(",都会被解析。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Binding from JSON")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Login "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tUser     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`form:"user" json:"user" binding:"required"`')]),t._v("\n\tPassword "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`form:"password" json:"password" binding:"required"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trouter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 绑定JSON的示例 ({"user": "q1mi", "password": "123456"})')]),t._v("\n\trouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/loginJSON"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" login Login\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ShouldBind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"login info:%#v\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusBadRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Listen and serve on 0.0.0.0:8080")]),t._v("\n\trouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8080"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"formfile-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#formfile-name"}},[t._v("#")]),t._v(" FormFile(name)")]),t._v(" "),s("p",[t._v("接收上传文件时使用。返回匹配到name的第一个值")]),t._v(" "),s("h4",{attrs:{id:"saveuploadedfile-file-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#saveuploadedfile-file-path"}},[t._v("#")]),t._v(" SaveUploadedFile(file,path)")]),t._v(" "),s("p",[t._v("保存上传文件")]),t._v(" "),s("h4",{attrs:{id:"redirect-code-location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redirect-code-location"}},[t._v("#")]),t._v(" Redirect(code,location)")]),t._v(" "),s("p",[t._v("重定向到外部链接，想要内部重定向使用：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("URL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/b"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改请求地址")]),t._v("\n  r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HandleContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继续后续的处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"next"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[t._v("#")]),t._v(" Next()")]),t._v(" "),s("p",[t._v("跳过当前中间件，将执行控制权交给下一个中间件，当后边的中间件执行完毕后，会继续执行当前上下文之后的代码")]),t._v(" "),s("h4",{attrs:{id:"abort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abort"}},[t._v("#")]),t._v(" Abort()")]),t._v(" "),s("p",[t._v("阻止后续中间件的执行，会执行完当前上下文代码后继续执行上一层中间件。")]),t._v(" "),s("h4",{attrs:{id:"set-key-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-key-value"}},[t._v("#")]),t._v(" Set(key,value)")]),t._v(" "),s("p",[t._v("在上下文中传递状态时用到，set值之后不同的中间件可以共享这个状态")]),t._v(" "),s("h4",{attrs:{id:"get-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-key"}},[t._v("#")]),t._v(" Get(key)")]),t._v(" "),s("p",[t._v("获取上下文中定义的key")]),t._v(" "),s("h3",{attrs:{id:"h"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#h"}},[t._v("#")]),t._v(" H")]),t._v(" "),s("p",[t._v("gin内部提供了"),s("code",[t._v("map[string]interface{}")]),t._v("类型的简写："),s("code",[t._v("gin.H")])]),t._v(" "),s("h2",{attrs:{id:"gorm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gorm"}},[t._v("#")]),t._v(" GORM")]),t._v(" "),s("h3",{attrs:{id:"简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("安装："),s("code",[t._v("go get -u gorm.io/gorm")]),t._v(","),s("code",[t._v("go get -u gorm.io/driver/sqlite")]),t._v(","),s("code",[t._v("go get -u gorm.io/driver/mysql")])]),t._v(" "),s("p",[t._v("代码中导入相关数据库驱动：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gorm.io/driver/mysql"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gorm.io/gorm"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("数据表用结构体来表示")]),t._v(" "),s("p",[t._v("数据行用结构体实例来表示")]),t._v(" "),s("p",[t._v("字段用结构体字段表示")]),t._v(" "),s("h4",{attrs:{id:"立即执行方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即执行方法"}},[t._v("#")]),t._v(" 立即执行方法")]),t._v(" "),s("p",[t._v("立即执行方法是指那些会立即生成sql语句病发送到数据库的方法，一般时CRUD方法，例如："),s("code",[t._v("Create、Frist、Find、Take、Save、UpdateXXX、Delete、Scan、Row、Rows")])]),t._v(" "),s("h4",{attrs:{id:"orm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#orm"}},[t._v("#")]),t._v(" ORM")]),t._v(" "),s("p",[t._v("什么是orm，分别代表对象、关系、映射，也就是用代码中的对象来编写关系型数据库")]),t._v(" "),s("p",[t._v("orm的优点：提高开发效率")]),t._v(" "),s("p",[t._v("orm的缺点：牺牲执行性能、牺牲灵活性、弱化SQL能力")]),t._v(" "),s("h3",{attrs:{id:"context-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context-2"}},[t._v("#")]),t._v(" Context")]),t._v(" "),s("h4",{attrs:{id:"withcontext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#withcontext"}},[t._v("#")]),t._v(" WithContext")]),t._v(" "),s("p",[t._v("关联上下文")]),t._v(" "),s("h3",{attrs:{id:"高级查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级查询"}},[t._v("#")]),t._v(" 高级查询")]),t._v(" "),s("h4",{attrs:{id:"findinbatches"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findinbatches"}},[t._v("#")]),t._v(" FindInBatches")]),t._v(" "),s("p",[t._v("批量查询并处理记录")]),t._v(" "),s("h4",{attrs:{id:"firstorinit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firstorinit"}},[t._v("#")]),t._v(" FirstOrInit")]),t._v(" "),s("p",[t._v("获取第一条匹配的数据，如果没有则根据给定的条件(仅支持 sturct 和 map 条件)初始化一个实例,如果查询到则Attrs不生效。这些改动不会被保存到数据库。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no_existing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Attrs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FirstOrInit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"firstorcreate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firstorcreate"}},[t._v("#")]),t._v(" FirstOrCreate")]),t._v(" "),s("p",[t._v("与FirstOrInit不同，FirstOrCreate会将结果写会数据库。获取第一条匹配的记录，或者根据给定的条件（仅支持struct和map条件）更新一条新记录，不管是否找到记录"),s("code",[t._v("Assing")]),t._v("都会将属性赋值给struct。Assgin不管是否查询到都讲属性赋值给实例。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"non_existing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FirstOrCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"声明模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明模型"}},[t._v("#")]),t._v(" 声明模型")]),t._v(" "),s("h4",{attrs:{id:"gorm-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gorm-model"}},[t._v("#")]),t._v(" gorm.Model")]),t._v(" "),s("p",[t._v("GORM 定义一个 "),s("code",[t._v("gorm.Model")]),t._v(" 结构体，其包括字段 "),s("code",[t._v("ID")]),t._v("、"),s("code",[t._v("CreatedAt")]),t._v("、"),s("code",[t._v("UpdatedAt")]),t._v("、"),s("code",[t._v("DeletedAt")]),t._v(",可以将它嵌入结构体中")]),t._v(" "),s("h3",{attrs:{id:"连接数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库"}},[t._v("#")]),t._v(" 连接数据库")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("DB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tDSN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root:baixiaoyu2997@tcp(127.0.0.1:3306)/db1?charset=utf8mb4&parseTime=True&loc=Local"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"迁移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迁移"}},[t._v("#")]),t._v(" 迁移")]),t._v(" "),s("h4",{attrs:{id:"automigrate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automigrate"}},[t._v("#")]),t._v(" AutoMigrate")]),t._v(" "),s("p",[t._v("用于自动前一schema保持schema是最新的")]),t._v(" "),s("h3",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),s("h4",{attrs:{id:"create-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-2"}},[t._v("#")]),t._v(" Create")]),t._v(" "),s("p",[t._v("通过数据的指针来创建一条记录，通过在结构体的tag中制定default来设置默认值。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("type User struct{\n\tID int64\n\tName string `grom:\"default:'张三'\"`\n}\n")])])]),s("p",[t._v("当插入数据时，如果值显示设置为 零值，并且该字段设置了默认值，那么会优先使用默认值。")]),t._v(" "),s("p",[t._v("如果想解决上边的问题，那么有两种方法：")]),t._v(" "),s("ol",[s("li",[t._v("使用指针")]),t._v(" "),s("li",[t._v("使用Scanner/Valuer")])]),t._v(" "),s("h4",{attrs:{id:"批量插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量插入"}},[t._v("#")]),t._v(" 批量插入")]),t._v(" "),s("p",[t._v("Create支持使用slice批量插入")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("CreateInBatches(users,100)")]),t._v("还可以指定数量")]),t._v(" "),s("h4",{attrs:{id:"关联创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关联创建"}},[t._v("#")]),t._v(" 关联创建")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jinzhu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  CreditCard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CreditCard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"411111111111"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[t._v("#")]),t._v(" 查询")]),t._v(" "),s("h4",{attrs:{id:"first"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first"}},[t._v("#")]),t._v(" First")]),t._v(" "),s("p",[t._v("根据主键查询第一条记录")]),t._v(" "),s("h4",{attrs:{id:"find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[t._v("#")]),t._v(" Find")]),t._v(" "),s("p",[t._v("查询所有记录，第二个参数")]),t._v(" "),s("h4",{attrs:{id:"take"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#take"}},[t._v("#")]),t._v(" Take")]),t._v(" "),s("p",[t._v("随机获取一条记录")]),t._v(" "),s("h4",{attrs:{id:"last"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last"}},[t._v("#")]),t._v(" Last")]),t._v(" "),s("p",[t._v("根据主键查询最后一条数据")]),t._v(" "),s("h4",{attrs:{id:"where"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[t._v("#")]),t._v(" where")]),t._v(" "),s("p",[t._v("where方法有多种写法，第一种与普通sql的where一致，语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.Where("name = ?","jinzhu").First(&user) // 查询name=jinzhu的数据\n')])])]),s("p",[t._v("第二种使用Struct和Map查询：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.Where(map[string]interface{}{"name":"jinzhu"}).Find(&users)\n')])])]),s("p",[t._v("通过结构体进行查询时，将不会查询零值，想要查询零值的话使用map")]),t._v(" "),s("h4",{attrs:{id:"not"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#not"}},[t._v("#")]),t._v(" Not")]),t._v(" "),s("p",[t._v("用法与where类似")]),t._v(" "),s("h4",{attrs:{id:"or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#or"}},[t._v("#")]),t._v(" Or")]),t._v(" "),s("p",[t._v("用法与where类似")]),t._v(" "),s("h4",{attrs:{id:"select-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-2"}},[t._v("#")]),t._v(" Select")]),t._v(" "),s("p",[t._v("选择查询返回的列")]),t._v(" "),s("h4",{attrs:{id:"order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" Order")]),t._v(" "),s("p",[t._v("排序方式，可多个")]),t._v(" "),s("h4",{attrs:{id:"limit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[t._v("#")]),t._v(" Limit")]),t._v(" "),s("p",[t._v("限制条数，当值为-1时，消除之前Limit的影响")]),t._v(" "),s("h4",{attrs:{id:"offset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offset"}},[t._v("#")]),t._v(" Offset")]),t._v(" "),s("p",[t._v("偏移量，当值为-1时，消除之前Offset的影响")]),t._v(" "),s("h4",{attrs:{id:"scan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scan"}},[t._v("#")]),t._v(" Scan")]),t._v(" "),s("p",[t._v("返回结果至struct，与Find类似")]),t._v(" "),s("h4",{attrs:{id:"preload"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preload"}},[t._v("#")]),t._v(" Preload")]),t._v(" "),s("p",[t._v("想要查询关联表的数据，需要使用"),s("code",[t._v("Preload")]),t._v("预先加载，如果有关联表的关联表那么可以使用嵌套语法")]),t._v(" "),s("h3",{attrs:{id:"更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[t._v("#")]),t._v(" 更新")]),t._v(" "),s("h4",{attrs:{id:"save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#save"}},[t._v("#")]),t._v(" Save")]),t._v(" "),s("p",[t._v("保存所有字段，即使字段是零值，如果没有主键则直接插入数据")]),t._v(" "),s("h4",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" Update")]),t._v(" "),s("p",[t._v("更新单个列的值，使用Update时需要指定条件，Update支持struct和map类型参数。使用struct更新时，默认只会更新非零值的字段。")]),t._v(" "),s("p",[t._v("想要只更新指定的列，那么可以使用Select预先筛选出来")]),t._v(" "),s("h4",{attrs:{id:"updates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updates"}},[t._v("#")]),t._v(" Updates")]),t._v(" "),s("p",[t._v("更新多列，支持struct和map，只会更新非零值,如果接收的数据有很多，但是只想更新部分，需要在语句前加"),s("code",[t._v("Select")]),t._v("选定要更新的列,或者添加Omit忽略要更新的列。如果更新的时候想跳过hooks，那么使用"),s("code",[t._v("UpdateColumn")]),t._v("或者"),s("code",[t._v("UpdateColumns")])]),t._v(" "),s("h4",{attrs:{id:"omit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#omit"}},[t._v("#")]),t._v(" Omit")]),t._v(" "),s("p",[t._v("如果更新的时候想要忽略某个字段，name使用Omit")]),t._v(" "),s("h4",{attrs:{id:"rowsaffected"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rowsaffected"}},[t._v("#")]),t._v(" RowsAffected")]),t._v(" "),s("p",[t._v("通过返回值的RowsAffected字段，可以获得更新的记录数。")]),t._v(" "),s("h4",{attrs:{id:"更新关联数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新关联数据"}},[t._v("#")]),t._v(" 更新关联数据")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Session")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("FullSaveAssociations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Updates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"使用sql表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用sql表达式"}},[t._v("#")]),t._v(" 使用SQL表达式")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Expr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price * ? + ?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 价格变为原来的2倍+100")]),t._v("\n")])])]),s("h3",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),s("h4",{attrs:{id:"delete-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete-2"}},[t._v("#")]),t._v(" Delete")]),t._v(" "),s("p",[t._v("给定主键时，删除一条记录，否则会批量删除")]),t._v(" "),s("h4",{attrs:{id:"软删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软删除"}},[t._v("#")]),t._v(" 软删除")]),t._v(" "),s("p",[t._v("如果模型中包含DeleteAt，它将自动获得软删除的能力。不通过gorm.Model，手动开启软删除在模型中添加:")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ID      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n  Deleted gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeletedAt\n  Name    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以通过"),s("code",[t._v("Unscoped")]),t._v("方法找到软删除的记录。")]),t._v(" "),s("h4",{attrs:{id:"硬删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#硬删除"}},[t._v("#")]),t._v(" 硬删除")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Unscoped")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DELETE FROM orders WHERE id=10;")]),t._v("\n")])])]),s("h4",{attrs:{id:"delete-flag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete-flag"}},[t._v("#")]),t._v(" Delete Flag")]),t._v(" "),s("p",[t._v("将 unix 时间戳作为 delete flag")]),t._v(" "),s("div",{staticClass:"language-GO extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gorm.io/plugin/soft_delete"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ID        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("\n  Name      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  DeletedAt soft_delete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeletedAt\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[t._v("#")]),t._v(" scope")]),t._v(" "),s("p",[t._v("复用逻辑，把共通的查询逻辑写成"),s("code",[t._v("func(*gorm.DB) *gorm.DB")]),t._v("函数使用。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AmountGreaterThan1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount > ?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PaidWithCreditCard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pay_mode_sign = ?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PaidWithCod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pay_mode_sign = ?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OrderStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status IN (?)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scopes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AmountGreaterThan1000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PaidWithCreditCard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("orders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找所有金额大于 1000 的信用卡订单")]),t._v("\n\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scopes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AmountGreaterThan1000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PaidWithCod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("orders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找所有金额大于 1000 的 COD 订单")]),t._v("\n\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scopes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AmountGreaterThan1000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OrderStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paid"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shipped"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("orders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找所有金额大于1000 的已付款或已发货订单")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表"}},[t._v("#")]),t._v(" 表")]),t._v(" "),s("h4",{attrs:{id:"清空整个表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清空整个表"}},[t._v("#")]),t._v(" 清空整个表")]),t._v(" "),s("p",[t._v("两种方法：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("db.Migrator().DropTable(&User{}) 删除表")])]),t._v(" "),s("li",[t._v("清空表")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 = 1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"truncate table users"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Session")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("AllowGlobalUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("参考：https://www.cnblogs.com/sss4/p/14163524.html")]),t._v(" "),s("h4",{attrs:{id:"重命名表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重命名表"}},[t._v("#")]),t._v(" 重命名表")]),t._v(" "),s("p",[s("code",[t._v("db.Migrator().ReanameTable(&User{},&User2{})")])]),t._v(" "),s("h4",{attrs:{id:"是否存在表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#是否存在表"}},[t._v("#")]),t._v(" 是否存在表")]),t._v(" "),s("p",[s("code",[t._v("db.Migrator().HasTable(&User{})")])]),t._v(" "),s("h3",{attrs:{id:"实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),s("h4",{attrs:{id:"singulartable-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#singulartable-bool"}},[t._v("#")]),t._v(" SingularTable(bool)")]),t._v(" "),s("p",[t._v("禁用默认表名的复数形式，如果设置为true，则表名不带s")]),t._v(" "),s("h4",{attrs:{id:"table-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-name"}},[t._v("#")]),t._v(" Table(name)")]),t._v(" "),s("p",[t._v("制定要操作某一个表")]),t._v(" "),s("h4",{attrs:{id:"migrator-createtable-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#migrator-createtable-type"}},[t._v("#")]),t._v(" Migrator().CreateTable(&type)")]),t._v(" "),s("p",[t._v("手动创建表")]),t._v(" "),s("h4",{attrs:{id:"newrecord-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#newrecord-type"}},[t._v("#")]),t._v(" NewRecord(&type)")]),t._v(" "),s("p",[t._v("判断数据库该数据主键是否为空")]),t._v(" "),s("h4",{attrs:{id:"raw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raw"}},[t._v("#")]),t._v(" Raw")]),t._v(" "),s("p",[t._v("原生sql查询")]),t._v(" "),s("h3",{attrs:{id:"debug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[t._v("#")]),t._v(" Debug")]),t._v(" "),s("p",[t._v("在任何操作语句前面加上"),s("code",[t._v("Debug()")]),t._v("都会在控制台打印对应的"),s("code",[t._v("sql")]),t._v("命令")]),t._v(" "),s("h3",{attrs:{id:"钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#钩子"}},[t._v("#")]),t._v(" 钩子")]),t._v(" "),s("p",[t._v("创建、查询、更新、删除等操作之前、之后调用的函数")]),t._v(" "),s("h4",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如何将零值存入数据库？")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("使用指针的方式")]),t._v(" "),s("li",[t._v("使用Scanner/Valuer")]),t._v(" "),s("li",[t._v("Save")])])])])]),t._v(" "),s("h2",{attrs:{id:"goquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goquery"}},[t._v("#")]),t._v(" Goquery")]),t._v(" "),s("h3",{attrs:{id:"find-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-2"}},[t._v("#")]),t._v(" Find")]),t._v(" "),s("p",[t._v("类似querySelectorAll，返回"),s("code",[t._v("Selection")]),t._v("，可以链式调用")]),t._v(" "),s("h3",{attrs:{id:"first-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-2"}},[t._v("#")]),t._v(" First")]),t._v(" "),s("p",[t._v("返回查找到的第一个")]),t._v(" "),s("h2",{attrs:{id:"爬虫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#爬虫"}},[t._v("#")]),t._v(" 爬虫")]),t._v(" "),s("h3",{attrs:{id:"动态页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态页面"}},[t._v("#")]),t._v(" 动态页面")]),t._v(" "),s("p",[t._v("直接调访问的接口即可")]),t._v(" "),s("h3",{attrs:{id:"静态页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态页面"}},[t._v("#")]),t._v(" 静态页面")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("goquery")]),t._v(" 库")]),t._v(" "),s("h3",{attrs:{id:"静态文件处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态文件处理"}},[t._v("#")]),t._v(" 静态文件处理")]),t._v(" "),s("p",[t._v("相对路径的文件都下载到本地，获取静态文件可以参考这个回答：https://github.com/chromedp/chromedp/issues/760#issuecomment-786340809,")]),t._v(" "),s("p",[t._v("可以通过监听"),s("code",[t._v("Network.responseReceived")]),t._v("事件，保存文件，参考：https://stackoverflow.com/questions/53640405/puppeteer-save-webpage-and-images")]),t._v(" "),s("h2",{attrs:{id:"工程化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工程化"}},[t._v("#")]),t._v(" 工程化")]),t._v(" "),s("h3",{attrs:{id:"目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),s("h4",{attrs:{id:"流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[t._v("#")]),t._v(" 流程")]),t._v(" "),s("p",[s("code",[t._v("URL --\x3e routers --\x3e controller --\x3e logic--\x3e model --\x3e")])]),t._v(" "),s("h4",{attrs:{id:"controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[t._v("#")]),t._v(" controller")]),t._v(" "),s("p",[t._v("负责解析路由的控制器方法")]),t._v(" "),s("h4",{attrs:{id:"routers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#routers"}},[t._v("#")]),t._v(" routers")]),t._v(" "),s("p",[t._v("路由相关绑定")]),t._v(" "),s("h4",{attrs:{id:"templates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#templates"}},[t._v("#")]),t._v(" templates")]),t._v(" "),s("p",[t._v("模板")]),t._v(" "),s("h4",{attrs:{id:"dao"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao"}},[t._v("#")]),t._v(" dao")]),t._v(" "),s("p",[t._v("数据库初始化相关代码")]),t._v(" "),s("h4",{attrs:{id:"static"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static"}},[t._v("#")]),t._v(" static")]),t._v(" "),s("p",[t._v("模板静态文件")]),t._v(" "),s("h4",{attrs:{id:"models"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#models"}},[t._v("#")]),t._v(" models")]),t._v(" "),s("p",[t._v("模型的定义及相关的增删改查操作")]),t._v(" "),s("h4",{attrs:{id:"login"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#login"}},[t._v("#")]),t._v(" login")]),t._v(" "),s("p",[t._v("具体的业务功能")]),t._v(" "),s("h2",{attrs:{id:"微服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[t._v("#")]),t._v(" 微服务")]),t._v(" "),s("h3",{attrs:{id:"rpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rpc"}},[t._v("#")]),t._v(" RPC")]),t._v(" "),s("p",[t._v("远程过程调用（Remote Procedure Call，RPC）是一个计算机通信协议。")]),t._v(" "),s("p",[t._v("该协议允许运行一台计算机的程序调用另一台计算机的子程序")]),t._v(" "),s("p",[t._v("golang的rpc必须符合4个基本条件：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("结构体字段首字母要大写，可以别人调用\n\n函数名必须首字母大写\n\n函数第一参数是接收参数，第二个参数是返回给客户端的参数，必须是指针类型\n\n函数还必须有一个返回值error\n\n")])])]),s("p",[t._v("微服务架构下数据交互一般是对内 RPC，对外 REST")]),t._v(" "),s("h2",{attrs:{id:"最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),s("h3",{attrs:{id:"浮点类型计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型计算"}},[t._v("#")]),t._v(" 浮点类型计算")]),t._v(" "),s("p",[t._v("未了尽量最小化舍入错误，尽量先做乘法，再做除法")]),t._v(" "),s("h3",{attrs:{id:"时间变量类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间变量类型"}},[t._v("#")]),t._v(" 时间变量类型")]),t._v(" "),s("p",[t._v("应该使用int64或者uint64,因为到2038年就会超过int32的最大数。")]),t._v(" "),s("h3",{attrs:{id:"函数参数为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数参数为数组"}},[t._v("#")]),t._v(" 函数参数为数组")]),t._v(" "),s("p",[t._v("尽量使用切片而不是数组，这样性能会好点。")]),t._v(" "),s("h3",{attrs:{id:"函数变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数变量"}},[t._v("#")]),t._v(" 函数变量")]),t._v(" "),s("p",[t._v("检查函数值是否为"),s("code",[t._v("nil")]),t._v(",并在有需要时提供默认行为")]),t._v(" "),s("h3",{attrs:{id:"错误处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),s("p",[t._v("减少错误处理代码的一种策略时：将易错的代码和不会出错的代码隔离开")]),t._v(" "),s("h2",{attrs:{id:"问题-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题-2"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("h3",{attrs:{id:"如何判断数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断数据类型"}},[t._v("#")]),t._v(" 如何判断数据类型？")]),t._v(" "),s("ol",[s("li",[t._v("在业务代码中使用"),s("code",[t._v("reflect.TypeOf(xxx)")])]),t._v(" "),s("li",[t._v("在print中使用"),s("code",[t._v('fmt.Printf("%T", p)')])])]),t._v(" "),s("h3",{attrs:{id:"如何把字符转换成int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何把字符转换成int"}},[t._v("#")]),t._v(" 如何把字符转换成int？")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"数字转换成字符串乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字转换成字符串乱码"}},[t._v("#")]),t._v(" 数字转换成字符串乱码？")]),t._v(" "),s("p",[t._v("这个数字超出了code point范围")]),t._v(" "),s("h3",{attrs:{id:"如何判断字符串都是中文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断字符串都是中文"}},[t._v("#")]),t._v(" 如何判断字符串都是中文？")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" regexp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MatchString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^\\\\p{Han}+$"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"realname"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"如何判断字符串都是英文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断字符串都是英文"}},[t._v("#")]),t._v(" 如何判断字符串都是英文？")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" regexp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MatchString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[a-zA-Z]+$"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"engname"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"什么时候会触发panic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么时候会触发panic"}},[t._v("#")]),t._v(" 什么时候会触发panic")]),t._v(" "),s("ol",[s("li",[t._v("对值为nil的map添加元素")])]),t._v(" "),s("h3",{attrs:{id:"go爬虫需要注意什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go爬虫需要注意什么"}},[t._v("#")]),t._v(" go爬虫需要注意什么？")]),t._v(" "),s("p",[t._v("流程：")]),t._v(" "),s("ol",[s("li",[t._v("获取页面所有url")]),t._v(" "),s("li",[t._v("去重、判断链接是否有效")]),t._v(" "),s("li",[t._v("timeout")]),t._v(" "),s("li",[t._v("使用gorm时注意要使用UTF-8编码，如果不是需要转换")])]),t._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/75373075",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go语言设计和工具链核心团队成员介绍"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{248:function(t,e,s){"use strict";s.r(e);var a=s(1),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类","aria-hidden":"true"}},[t._v("#")]),t._v(" 类")]),t._v(" "),s("h3",{attrs:{id:"new关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new关键字","aria-hidden":"true"}},[t._v("#")]),t._v(" new关键字")]),t._v(" "),s("p",[t._v("在Dart2.0中"),s("code",[t._v("new")]),t._v("变成了可选项")]),t._v(" "),s("h2",{attrs:{id:"重要的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重要的概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 重要的概念")]),t._v(" "),s("h3",{attrs:{id:"私有变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#私有变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 私有变量")]),t._v(" "),s("p",[t._v("dart语言中没有public、protected和private这些关键字。但是在dart里面，以下划线开头的变量自动识别为私有变量")]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h3",{attrs:{id:"类型判定运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型判定运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 类型判定运算符")]),t._v(" "),s("p",[t._v("类型判定运算符\n"),s("code",[t._v("as")]),t._v("， "),s("code",[t._v("is")]),t._v("， 和 "),s("code",[t._v("is!")]),t._v(" 运算符用于在运行时处理类型检查：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Operator")]),t._v(" "),s("th",[t._v("Meaning")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("as")]),t._v(" "),s("td",[t._v("Typecast (也被用于指定库前缀)")])]),t._v(" "),s("tr",[s("td",[t._v("is")]),t._v(" "),s("td",[t._v("True if the object has the specified type")])]),t._v(" "),s("tr",[s("td",[t._v("is!")]),t._v(" "),s("td",[t._v("False if the object has the specified type")])])])]),t._v(" "),s("p",[t._v("例如， "),s("code",[t._v("obj is Object")]),t._v(" 总是 true。 但是只有 "),s("code",[t._v("obj")]),t._v(" 实现了 "),s("code",[t._v("T")]),t._v(" 的接口时， "),s("code",[t._v("obj is T")]),t._v(" 才是 true。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("as")]),t._v(" 运算符将对象强制转换为特定类型。 通常，可以认为是 "),s("code",[t._v("is")]),t._v(" 类型判定后，被判定对象调用函数的一种缩写形式。 请考虑以下代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("emp is Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Type check")]),t._v("\n  emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bob'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("as")]),t._v(" 运算符进行缩写：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bob'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("提示： 以上代码并不是等价的。 如果 "),s("code",[t._v("emp")]),t._v(" 为 null 或者不是 Person 对象， 那么第一个 "),s("code",[t._v("is")]),t._v(" 的示例，后面将不回执行； 第二个 "),s("code",[t._v("as")]),t._v(" 的示例会抛出异常。")])]),t._v(" "),s("h2",{attrs:{id:"libraries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#libraries","aria-hidden":"true"}},[t._v("#")]),t._v(" LIBRARIES")]),t._v(" "),s("h3",{attrs:{id:"dart-convert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dart-convert","aria-hidden":"true"}},[t._v("#")]),t._v(" dart:convert")]),t._v(" "),s("p",[t._v("引用："),s("code",[t._v("import 'dart:convert'")]),t._v(";")]),t._v(" "),s("p",[t._v("JSON"),s("br"),t._v("\n解码(JSON String->Object)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// NOTE: Be sure to use double quotes (\"),\n// not single quotes ('), inside the JSON string.\n// This string is JSON, not Dart.\nvar jsonString = '''\n  [\n    {\"score\": 40},\n    {\"score\": 80}\n  ]\n''';\n\nvar scores = jsonDecode(jsonString);\nassert(scores is List);\n\nvar firstScore = scores[0];\nassert(firstScore is Map);\nassert(firstScore['score'] == 40);\n")])])]),s("p",[t._v("编码(Object->JSON String)"),s("br"),t._v("\n支持int, double, String, bool, null, List, Map (with string keys)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var scores = [\n  {'score': 40},\n  {'score': 80},\n  {'score': 100, 'overtime': true, 'special_guest': null}\n];\n\nvar jsonText = jsonEncode(scores);\nassert(jsonText ==\n    '[{\"score\":40},{\"score\":80},'\n    '{\"score\":100,\"overtime\":true,'\n    '\"special_guest\":null}]');\n")])])]),s("p",[t._v("UTF-8"),s("br"),t._v("\n解码")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("List<int> utf8Bytes = [\n  0xc3, 0x8e, 0xc3, 0xb1, 0xc5, 0xa3, 0xc3, 0xa9,\n  0x72, 0xc3, 0xb1, 0xc3, 0xa5, 0xc5, 0xa3, 0xc3,\n  0xae, 0xc3, 0xb6, 0xc3, 0xb1, 0xc3, 0xa5, 0xc4,\n  0xbc, 0xc3, 0xae, 0xc5, 0xbe, 0xc3, 0xa5, 0xc5,\n  0xa3, 0xc3, 0xae, 0xe1, 0xbb, 0x9d, 0xc3, 0xb1\n];\n\nvar funnyWord = utf8.decode(utf8Bytes);\n\nassert(funnyWord == 'Îñţérñåţîöñåļîžåţîờñ');\n\n")])])]),s("p",[t._v("解码stream")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var lines = inputStream\n    .transform(utf8.decoder)\n    .transform(LineSplitter());\ntry {\n  await for (var line in lines) {\n    print('Got ${line.length} characters from stream');\n  }\n  print('file is now closed');\n} catch (e) {\n  print(e);\n}\n")])])]),s("p",[t._v("编码")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("List<int> encoded = utf8.encode('Îñţérñåţîöñåļîžåţîờñ');\n\nassert(encoded.length == utf8Bytes.length);\nfor (int i = 0; i < encoded.length; i++) {\n  assert(encoded[i] == utf8Bytes[i]);\n}\n\n")])])]),s("blockquote",[s("p",[t._v("引用自 "),s("a",{attrs:{href:"https://www.jianshu.com/p/0dbb26f58eb4",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flutter学习笔记5-dart:convert"),s("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=r.exports}}]);
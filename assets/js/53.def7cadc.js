(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{471:function(a,t,s){"use strict";s.r(t);var r=s(2),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"ui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ui"}},[a._v("#")]),a._v(" UI")]),a._v(" "),s("h3",{attrs:{id:"ora"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ora"}},[a._v("#")]),a._v(" ora")]),a._v(" "),s("p",[a._v("包用于显示加载中的效果，类似于前端页面的 loading 效果")]),a._v(" "),s("h3",{attrs:{id:"didyoumean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#didyoumean"}},[a._v("#")]),a._v(" didyoumean")]),a._v(" "),s("p",[a._v("通过用户输入猜测可能的选项")]),a._v(" "),s("h3",{attrs:{id:"commander"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commander"}},[a._v("#")]),a._v(" commander")]),a._v(" "),s("p",[a._v("commander 是一款重量轻，表现力和强大的命令行框架，提供了用户命令行输入和参数解析强大功能。")]),a._v(" "),s("h3",{attrs:{id:"inquirer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inquirer"}},[a._v("#")]),a._v(" inquirer")]),a._v(" "),s("p",[a._v("inquirer 为交互式命令行工具,比如在列表中进行选择")]),a._v(" "),s("h3",{attrs:{id:"chalk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chalk"}},[a._v("#")]),a._v(" chalk")]),a._v(" "),s("p",[a._v("chalk 是用于修改控制台字符串的样式，包括字体样式（加粗），颜色以及背景颜色等。")]),a._v(" "),s("h3",{attrs:{id:"progress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#progress"}},[a._v("#")]),a._v(" progress")]),a._v(" "),s("p",[a._v("显示进度条")]),a._v(" "),s("h2",{attrs:{id:"运行时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时"}},[a._v("#")]),a._v(" 运行时")]),a._v(" "),s("h3",{attrs:{id:"lerna"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lerna"}},[a._v("#")]),a._v(" lerna")]),a._v(" "),s("p",[a._v("Lerna 是优化和管理 JS 多包项目的利器")]),a._v(" "),s("h3",{attrs:{id:"current-device"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#current-device"}},[a._v("#")]),a._v(" current-device")]),a._v(" "),s("p",[a._v("操作系统判断、横屏竖屏判断、设备类型判断（手机或者平板）")]),a._v(" "),s("h3",{attrs:{id:"validate-npm-package-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#validate-npm-package-name"}},[a._v("#")]),a._v(" validate-npm-package-name")]),a._v(" "),s("p",[a._v("给我一个字符串，我告诉你它是否是有效的 npm 包名称。")]),a._v(" "),s("h3",{attrs:{id:"moment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#moment"}},[a._v("#")]),a._v(" moment")]),a._v(" "),s("p",[a._v("时间对象处理")]),a._v(" "),s("h3",{attrs:{id:"semver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#semver"}},[a._v("#")]),a._v(" semver")]),a._v(" "),s("p",[a._v("semver 是 语义化版本（Semantic Versioning）规范 的一个实现，目前是由 npm 的团队维护，实现了版本和版本范围的解析、计算、比较。")]),a._v(" "),s("h3",{attrs:{id:"minimist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#minimist"}},[a._v("#")]),a._v(" minimist")]),a._v(" "),s("p",[a._v("命令行参数解析")]),a._v(" "),s("h3",{attrs:{id:"globby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#globby"}},[a._v("#")]),a._v(" globby")]),a._v(" "),s("p",[a._v("通配符匹配文件名")]),a._v(" "),s("h3",{attrs:{id:"fs-extra"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-extra"}},[a._v("#")]),a._v(" fs-extra")]),a._v(" "),s("p",[a._v("对"),s("code",[a._v("fs")]),a._v("的扩展")]),a._v(" "),s("h3",{attrs:{id:"cross-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cross-env"}},[a._v("#")]),a._v(" cross-env")]),a._v(" "),s("p",[a._v("这是一款运行跨平台设置和使用环境变量的脚本。")]),a._v(" "),s("h3",{attrs:{id:"download-git-repo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#download-git-repo"}},[a._v("#")]),a._v(" download-git-repo")]),a._v(" "),s("p",[a._v("download-git-repo 是用于 从 GitHub, GitLab, Bitbucket 下载一个 git 仓库")]),a._v(" "),s("h3",{attrs:{id:"execa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#execa"}},[a._v("#")]),a._v(" execa")]),a._v(" "),s("p",[a._v("execa 是可以调用 shell 和本地外部程序的 javascript 封装。会启动子进程执行，支持多操作系统，包括 windows，如果父进程退出，则生成的全部子进程都被杀死。它是在 Node.js 内置的 child_process.exec 基础上进行了提升，比如更好地支持 windows 平台，以及提供 Promise 的接口等等")]),a._v(" "),s("h3",{attrs:{id:"nodemon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodemon"}},[a._v("#")]),a._v(" nodemon")]),a._v(" "),s("p",[a._v("在编写调试 Node.js 项目，修改代码后，需要频繁的手动 close 掉，然后再重新启动，非常繁琐。现在，我们可以使用 nodemon 这个工具，它的作用是监听代码文件的变动，当代码改变之后，自动重启。")]),a._v(" "),s("h2",{attrs:{id:"代码质量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码质量"}},[a._v("#")]),a._v(" 代码质量")]),a._v(" "),s("h3",{attrs:{id:"commitlint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[a._v("#")]),a._v(" commitlint")]),a._v(" "),s("p",[a._v("git 提交信息规范与验证")]),a._v(" "),s("h3",{attrs:{id:"husky"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[a._v("#")]),a._v(" husky")]),a._v(" "),s("p",[a._v("git hook，husky 能够防止不规范代码被 commit、push、merge 等等。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('// package.json\n"husky": {\n    "hooks": {\n      "pre-commit": "lint-staged",\n      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"\n    }\n  },\n  "lint-staged": {\n    "**/*.js": [\n      "eslint --fix",\n      "prettier --write",\n      "git add"\n    ]\n  }\n')])])]),s("h3",{attrs:{id:"lint-staged"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint-staged"}},[a._v("#")]),a._v(" lint-staged")]),a._v(" "),s("p",[a._v("是一个在 git 暂存文件上运行 linters 的工具")]),a._v(" "),s("h3",{attrs:{id:"standard-version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#standard-version"}},[a._v("#")]),a._v(" standard-version")]),a._v(" "),s("p",[a._v("standard-version 是一款遵循语义化版本（ semver）和 commit message 标准规范 的版本和 changlog 自动化工具")])])}),[],!1,null,null,null);t.default=e.exports}}]);
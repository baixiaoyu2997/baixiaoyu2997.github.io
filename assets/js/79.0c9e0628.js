(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{500:function(t,a,s){"use strict";s.r(a);var r=s(2),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),s("ol",[s("li",[s("p",[s("a",{attrs:{href:"https://github.com/tc39/ecma262",target:"_blank",rel:"noopener noreferrer"}},[t._v("ecma262"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("ECMA-262 的状态、进程和文档")])])])]),t._v(" "),s("h2",{attrs:{id:"内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[t._v("#")]),t._v(" 内置对象")]),t._v(" "),s("h3",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" Array")]),t._v(" "),s("ol",[s("li",[t._v("Array.prototype.forEach() forEach 遍历的对象如果是基础数据类型，那么不会修改原数组，但是如果为引用数据类型，可以修改原数组")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\narr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\narr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,2,3,4]")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [{a:1},{a:4},{a:9}]")]),t._v("\n")])])]),s("h3",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("h4",{attrs:{id:"string-prototype-trim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-trim"}},[t._v("#")]),t._v(" String.prototype.trim()")]),t._v(" "),s("p",[t._v("trim可以去除字符串中的回车符")]),t._v(" "),s("h3",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),s("p",[s("code",[t._v("object")]),t._v("只接收两种类型的key值："),s("code",[t._v("string")]),t._v("和`Symbol。从 ES6 开始，"),s("em",[t._v("String")]),t._v("和"),s("em",[t._v("Symbol")]),t._v("键是按顺序保存起来的，但是通过隐式转换保存成"),s("em",[t._v("String")]),t._v("的键就是乱序的")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// {key1: "value1", key0: "value0"}')]),t._v("\nobject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value20'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// {20: "value20", key1: "value1", key0: "value0"}')]),t._v("\n\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Object.keys()\n"),s("ul",[s("li",[t._v("操作中引入继承的属性会让问题复杂化，大多数时候，我们只关心对象自身的属性。所以，尽量不要用 for...in 循环，而用 Object.keys()代替 ​​​​")])])])]),t._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("p",[s("code",[t._v("Map")]),t._v("类似于加强版的Objec，不要将**「Map」"),s("strong",[t._v("作为普通")]),t._v("「Object」**的替代品，而应该是普通对象的补充。相较于Object有以下几个区别：")]),t._v(" "),s("ol",[s("li",[t._v("支持迭代，顺序与属性顺序一致")]),t._v(" "),s("li",[t._v("key值不受类型限制，可以输入任何类型")]),t._v(" "),s("li",[t._v("可以通过size获取长度")]),t._v(" "),s("li",[t._v("不会因为自定义键名导致与原型继承属性冲突")]),t._v(" "),s("li",[t._v("**「Map」"),s("strong",[t._v("是一个纯哈希结构，而")]),t._v("「Object」**不是（它拥有自己的内部逻辑）。"),s("em",[t._v("Map")]),t._v(" 在"),s("em",[t._v("频繁增删键值对")]),t._v("的场景下表现更好，性能更高。因此当你需要频繁操作数据的时候也可以优先考虑 "),s("em",[t._v("Map")])]),t._v(" "),s("li",[t._v("不能通过JSON进行转化")]),t._v(" "),s("li",[t._v("因为key值支持所有类型，那么可以通过将值设为正则去进行更简洁的逻辑判断。")])]),t._v(" "),s("h3",{attrs:{id:"weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),s("p",[t._v("WeakMap的键必须是"),s("code",[t._v("Object")]),t._v("类型，因为key值是弱引用的，有可能被垃圾回收掉，所以WeakMap的key是不可枚举的。")]),t._v(" "),s("p",[t._v("应用场景：")]),t._v(" "),s("ol",[s("li",[t._v("以DOM节点作为键值，如果dom节点丢失，那么引用丢失。")]),t._v(" "),s("li",[t._v("WeakMap 可用来部署类中的私有属性")])]),t._v(" "),s("h3",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),s("p",[t._v("相当于没有重复值的数组，可以用来去重")]),t._v(" "),s("h3",{attrs:{id:"weakset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[t._v("#")]),t._v(" WeakSet")]),t._v(" "),s("p",[t._v("类似于WeakMap，数组成员只能是对象")]),t._v(" "),s("h3",{attrs:{id:"intl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intl"}},[t._v("#")]),t._v(" Intl")]),t._v(" "),s("p",[t._v("Intl 对象是 ECMAScript 国际化 API 的一个命名空间，它提供了精确的字符串对比、数字格式化，和日期时间格式化。")]),t._v(" "),s("h4",{attrs:{id:"intl-numberformat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intl-numberformat"}},[t._v("#")]),t._v(" Intl.NumberFormat")]),t._v(" "),s("p",[t._v("Intl.NumberFormat是对语言敏感的格式化数字类的构造器类")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Intl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NumberFormat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果在美国英语地区 → '3,500'")]),t._v("\n")])])]),s("h3",{attrs:{id:"promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),s("p",[t._v("new Promise 会立即执行，then 方法指定的回调函数，将在当前脚本所有同步任务执行完才会执行")]),t._v(" "),s("h3",{attrs:{id:"proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),s("p",[s("strong",[t._v("Proxy")]),t._v(" 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。")]),t._v(" "),s("h4",{attrs:{id:"proxy的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy的应用场景"}},[t._v("#")]),t._v(" proxy的应用场景")]),t._v(" "),s("ol",[s("li",[t._v("防止对象内部属性（私有属性）被外部改写，达到类型安全")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("has")]),t._v("方法隐藏某些属性，不被"),s("code",[t._v("in")]),t._v("运算符发现")]),t._v(" "),s("li",[t._v("抽离校验模块，类型检查")]),t._v(" "),s("li",[t._v("访问日志")]),t._v(" "),s("li",[t._v("预警和拦截")])]),t._v(" "),s("h3",{attrs:{id:"reflect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reflect"}},[t._v("#")]),t._v(" Reflect")]),t._v(" "),s("p",[t._v("js内置对象，提供拦截 JavaScript 操作的方法。这些方法与proxy handlers的方法相同。"),s("code",[t._v("Reflect")]),t._v("不是一个函数对象，因此它是不可构造的。与大多数全局对象不同，"),s("code",[t._v("Reflect")]),t._v("不是一个构造函数。你不能将其与一个new运算符一起使用，或者将"),s("code",[t._v("Reflect")]),t._v("对象作为一个函数来调用。"),s("code",[t._v("Reflect")]),t._v("的所有属性和方法都是静态的（就像Math对象）。")]),t._v(" "),s("h3",{attrs:{id:"error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" Error")]),t._v(" "),s("p",[t._v("创建错误对象："),s("code",[t._v("const err=Error('这里是错误')")]),s("br"),t._v("\n创建后，错误对象将包含三个属性：")]),t._v(" "),s("ul",[s("li",[t._v("message：包含错误消息的字符串")]),t._v(" "),s("li",[t._v("name:错误的类型")]),t._v(" "),s("li",[t._v("stack⚠️ ：函数执行的堆栈追踪")])]),t._v(" "),s("p",[t._v("除了 Error 对象还有：")]),t._v(" "),s("ul",[s("li",[t._v("EvalError")]),t._v(" "),s("li",[t._v("InternalError⚠️")]),t._v(" "),s("li",[t._v("RangeError")]),t._v(" "),s("li",[t._v("ReferenceError")]),t._v(" "),s("li",[t._v("SyntaxError")]),t._v(" "),s("li",[t._v("TypeError")]),t._v(" "),s("li",[t._v("URIError")])]),t._v(" "),s("p",[t._v("除了这些内置错误外，在浏览器中我们还可以找到：")]),t._v(" "),s("ul",[s("li",[t._v("DOMException： DOMException 接口代表调用方法或访问 Web API 属性时发生的异常事件")]),t._v(" "),s("li",[t._v("DOMError⚠️ ,已弃用，如今不再使用。")])]),t._v(" "),s("p",[t._v("只有错误对象被抛出的时候才成为异常")]),t._v(" "),s("h3",{attrs:{id:"decodeuri"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decodeuri"}},[t._v("#")]),t._v(" decodeURI()")]),t._v(" "),s("p",[t._v("解码encodeURI")]),t._v(" "),s("h3",{attrs:{id:"encodeuri"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#encodeuri"}},[t._v("#")]),t._v(" encodeURI()")]),t._v(" "),s("p",[t._v("转换为UTF-8编码")]),t._v(" "),s("h3",{attrs:{id:"date"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[t._v("#")]),t._v(" Date")]),t._v(" "),s("p",[t._v("名词解释：")]),t._v(" "),s("ul",[s("li",[t._v("UTC：格林威治标准时间，例如：也叫做 GMT 时间。由 UTC 时间还可以引申出本地时间，所谓本地时间流逝格林威治标准时间加上时区差，东为正，西为负。如，北京时间为 UTC+0800。获取 UTC 的方法:")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" UTCseconds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTimezoneOffset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTCseconds"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UTCseconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Unix 时间戳：Unix 时间戳是从 1970 年 1 月 1 日到"),s("code",[t._v("给定时间")]),t._v("所经过的秒数，所以跟本地时间还是 UTC 时间没有关系。在 js 中等于"),s("code",[t._v("var seconds = Math.floor(Date.now() / 1000);")])])]),t._v(" "),s("h2",{attrs:{id:"语句和声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语句和声明"}},[t._v("#")]),t._v(" 语句和声明")]),t._v(" "),s("h3",{attrs:{id:"for-of"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-of"}},[t._v("#")]),t._v(" for...of")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("for...of")]),t._v("语句")]),t._v("在"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols",target:"_blank",rel:"noopener noreferrer"}},[t._v("可迭代对象"),s("OutboundLink")],1),t._v("（包括 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Array")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Map")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Set")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("String")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("TypedArray")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/arguments",target:"_blank",rel:"noopener noreferrer"}},[t._v("arguments"),s("OutboundLink")],1),t._v(" 对象等等）上创建一个迭代循环")]),t._v(" "),s("h3",{attrs:{id:"try-catch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-catch"}},[t._v("#")]),t._v(" try...catch")]),t._v(" "),s("p",[t._v("try catch 中任何给定的异常只会被离它最近的封闭 catch 块捕获一次。如果从 finally 块中返回一个值，无论是否有 return 语句在 try 和 catch 中，这个值将会成为整个 try-catch-finally 的返回值。多个 try catch 嵌套时，先执行最里边的 try catch,当嵌套 try catch throw 一个新 error 时，会先运行它自己的 finally 块再执行外部的 catch 块"),s("br"),t._v("\n不能用做捕获异步错误，因为 try...catch 是同步执行的。")]),t._v(" "),s("h3",{attrs:{id:"export"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export"}},[t._v("#")]),t._v(" export")]),t._v(" "),s("p",[t._v("export 与 import 必须处于模块顶层，import 具有提升效果，导入多个相同模块时，其实相当于只导入一个，用*可以导出所有模块的输出值，加载出来的模块不可修改")]),t._v(" "),s("h2",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import")]),t._v(" "),s("h3",{attrs:{id:"动态import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态import"}},[t._v("#")]),t._v(" 动态import")]),t._v(" "),s("p",[t._v("动态import返回"),s("code",[t._v("promise")]),t._v(",不需要依赖"),s("code",[t._v('type="module"')]),t._v("  ，使用场景：")]),t._v(" "),s("ul",[s("li",[t._v("当静态导入的模块很明显的降低了代码的加载速度且被使用的可能性很低，或者并不需要马上使用它。")]),t._v(" "),s("li",[t._v("当静态导入的模块很明显的占用了大量系统内存且被使用的可能性很低。")]),t._v(" "),s("li",[t._v("当被导入的模块，在加载时并不存在，需要异步获取")]),t._v(" "),s("li",[t._v("当导入模块的说明符，需要动态构建。（静态导入只能使用静态说明符）")]),t._v(" "),s("li",[t._v("当被导入的模块有副作用（这里说的副作用，可以理解为模块中会直接运行的代码），这些副作用只有在触发了某些条件才被需要时。（原则上来说，模块不能有副作用，但是很多时候，你无法控制你所依赖的模块的内容）")])]),t._v(" "),s("p",[t._v("请不要滥用动态导入（只有在必要情况下采用）。静态框架能更好的初始化依赖，而且更有利于静态分析工具和"),s("a",{attrs:{href:"https://wiki.developer.mozilla.org/en-US/docs/Glossary/Tree_shaking",target:"_blank",rel:"noopener noreferrer"}},[t._v("tree shaking"),s("OutboundLink")],1),t._v("发挥作用")]),t._v(" "),s("h3",{attrs:{id:"class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" class")]),t._v(" "),s("p",[t._v("class 不会变量提升")]),t._v(" "),s("h3",{attrs:{id:"var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("通过 var 创建的全局变量（再任何函数体之外创建的变量）不能被删除。")])]),t._v(" "),s("li",[s("p",[t._v("没有用 var 创建的隐式全局变量（不考虑函数内的情况）可以被删除。")]),t._v(" "),s("blockquote",[s("p",[t._v("在浏览器环境中，所有 js 代码都是在"),s("code",[t._v("window")]),t._v("作用域内的，所以在这种情况下，我们所说的全局变量其实都是"),s("code",[t._v("window")]),t._v("下的一个属性， 所以可以用"),s("code",[t._v("delete")]),t._v("删除，但在如 "),s("code",[t._v("nodejs")]),t._v("或"),s("code",[t._v("gjs")]),t._v("等非浏览器环境下，显示生命的全局变量无法用"),s("code",[t._v("delete")]),t._v("删除")])])])]),t._v(" "),s("h3",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("h3",{attrs:{id:"async-和-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-和-await"}},[t._v("#")]),t._v(" async 和 await")]),t._v(" "),s("p",[t._v("任何函数之前加上async关键字，意味着该函数会返回promise，即使没有显示地这么样做，它也会在内部使它返回promise")]),t._v(" "),s("h2",{attrs:{id:"表达式和运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式和运算符"}},[t._v("#")]),t._v(" 表达式和运算符")]),t._v(" "),s("h3",{attrs:{id:"spread-syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spread-syntax"}},[t._v("#")]),t._v(" Spread syntax")]),t._v(" "),s("ul",[s("li",[t._v("展开语法（...）内部使用 for...of 循环")]),t._v(" "),s("li",[t._v("可以通过扩展运算符将具有 Iterator 接口的 arrlike 转换成 array,Array.from()可以将带有 length 属性的对象转换成 array，相较与前者少了 Iterator 的限制。 ​​​​")])]),t._v(" "),s("h3",{attrs:{id:"按位操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按位操作符"}},[t._v("#")]),t._v(" 按位操作符")]),t._v(" "),s("ol",[s("li",[t._v("非位运算符~，简单的理解，对任一数值 x 进行按位非操作的结果为 -(x + 1)，那么, ~~x 就为 -(-(x+1) + 1)。判断数值中是否有某元素时，以前这样判断：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//易读")]),t._v("\n")])])]),s("p",[t._v("现在可以这样判断：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//简洁")]),t._v("\n")])])]),s("p",[t._v("对于浮点数，~~value 可以代替 parseInt(value)，而且前者效率更高些")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-2")]),t._v("\n")])])]),s("h3",{attrs:{id:"可选链操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选链操作符"}},[t._v("#")]),t._v(" 可选链操作符")]),t._v(" "),s("p",[t._v("语法："),s("code",[t._v("?.")]),s("br"),t._v(" "),s("strong",[t._v("注意")])]),t._v(" "),s("ol",[s("li",[t._v("可选链不能用于赋值")]),t._v(" "),s("li",[t._v("可选链用作函数判断时，使用类似"),s("code",[t._v("someInterface.customMethod?.()")]),t._v("执行，如果"),s("code",[t._v("customMethod")]),t._v("存在，但是不为函数，还是会产生异常。")])]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h2",{attrs:{id:"继承和原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承和原型链"}},[t._v("#")]),t._v(" 继承和原型链")]),t._v(" "),s("h3",{attrs:{id:"原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),s("p",[t._v("原型是一个普通的对象，你所创建的每一个函数会自动带有"),s("code",[t._v("prototype")]),t._v("属性，这个属性指向一个空对象，这个空对象包含一个"),s("code",[t._v("constructor")]),t._v("属性，它指向你新建的函数而不是内置的"),s("code",[t._v("Object()")]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("prototype\n"),s("ol",[s("li",[t._v("构造函数的"),s("code",[t._v("prototype")]),t._v("等于实例对象的"),s("code",[t._v("proto")]),t._v(",指向的就是原型对象")]),t._v(" "),s("li",[t._v("prototype 只有函数才有")])])]),t._v(" "),s("li",[t._v("proto\n"),s("ol",[s("li",[t._v("一个对象的"),s("code",[t._v("__proto__")]),t._v("总是指向它的构造函数的 prototype")]),t._v(" "),s("li",[s("code",[t._v("Object.prototype.__proto__===null")]),t._v(",继承链的终点等于"),s("code",[t._v("null")])])])]),t._v(" "),s("li",[t._v("constructor\n"),s("ol",[s("li",[t._v("原型对象的"),s("code",[t._v("constructor")]),t._v("指向构造函数")])])])]),t._v(" "),s("p",[t._v("用一张图来汇总他们之间的关系： "),s("img",{attrs:{src:"https://blog-pic.oss-cn-beijing.aliyuncs.com/JavaScript%E4%B9%8B%E6%97%85_2020-3-3-8-47-54.png",alt:"JavaScript之旅_2020-3-3-8-47-54.png"}})]),t._v(" "),s("blockquote",[s("p",[t._v("引用："),s("a",{attrs:{href:"https://www.jianshu.com/p/7d58f8f45557",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇文章看懂"),s("em",[t._v("proto")]),t._v("和 prototype 的关系及区别"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new"}},[t._v("#")]),t._v(" new")]),t._v(" "),s("p",[t._v("内建对象函数都可以在前面加上 new 来被调用，这使函数调用成为一个 构造器调用（constructor call）。这是一个重要而微妙的区别：实际上不存在“构造器函数”这样的东西，而只有函数的构造器调用。")]),t._v(" "),s("p",[t._v("new 的原理很简单, 就是引擎内部新建一个空对象，然后将这个空对象的 proto 指向构造函数的 prototype.然后调用构造函数，去填充我们创建的空对象(如果有必要)。 最后将 this 指向我们刚刚创建的新对象。")]),t._v(" "),s("p",[t._v("如果用代码来表示，大概是这样的：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myNew")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("constructor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" constructor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("引用:"),s("a",{attrs:{href:"https://lucifer.ren/fe-interview/#/topics/js/prototype?id=new",target:"_blank",rel:"noopener noreferrer"}},[t._v("大前端面试宝典 - 图解前端"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"并发模型与事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发模型与事件循环"}},[t._v("#")]),t._v(" 并发模型与事件循环")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/goloving/p/12790991.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 中的单线程与多线程、事件循环与消息队列、宏任务与微任务"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"调用栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用栈"}},[t._v("#")]),t._v(" 调用栈")]),t._v(" "),s("h3",{attrs:{id:"事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),s("h3",{attrs:{id:"消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[t._v("#")]),t._v(" 消息队列")]),t._v(" "),s("h3",{attrs:{id:"微任务队列-作业队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微任务队列-作业队列"}},[t._v("#")]),t._v(" 微任务队列（作业队列）")]),t._v(" "),s("h2",{attrs:{id:"术语表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#术语表"}},[t._v("#")]),t._v(" 术语表")]),t._v(" "),s("h3",{attrs:{id:"hoisting-变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hoisting-变量提升"}},[t._v("#")]),t._v(" Hoisting（变量提升）")]),t._v(" "),s("p",[t._v("变量和函数的声明会在编译阶段被放入内存中。"),s("code",[t._v("JavaScript")]),t._v(" 仅提升声明，而不提升初赋值")]),t._v(" "),s("ol",[s("li",[t._v("所有的声明都会提升到作用域的最顶上去。")]),t._v(" "),s("li",[t._v("同一个变量只会声明一次，其他的会被忽略掉。")]),t._v(" "),s("li",[t._v("函数声明的优先级高于变量申明的优先级，并且函数声明和函数定义的部分一起被提升。")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出1，不会输出2。函数声明和变量声明都会被提升，但是需要注意的是函数会先被提升，然后才是变量。")]),t._v("\n")])])]),s("p",[t._v("等同于：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("引用："),s("a",{attrs:{href:"https://blog.51cto.com/11871779/2119667",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 中的变量提升和函数提升"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),s("h3",{attrs:{id:"单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),s("p",[t._v("限制类实例化次数只能一次，一个类只有一个实例，并提供一个访问它的全局访问点。")]),t._v(" "),s("h4",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),s("ol",[s("li",[t._v("类只有一个实例")]),t._v(" "),s("li",[t._v("全局可访问该实例")]),t._v(" "),s("li",[t._v("自行实例化（主动实例化）")]),t._v(" "),s("li",[t._v("可推迟初始化，即延迟执行")])]),t._v(" "),s("h4",{attrs:{id:"优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),s("ol",[s("li",[t._v("优点：适用于单一对象，只生成一个对象实例，避免频繁创建和销毁实例，减少内存占用。")]),t._v(" "),s("li",[t._v("缺点：不适用动态扩展对象，或需创建多个相似对象的场景。")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：多线程编程语言中，单例模式会涉及同步锁的问题。而js是单线程编程语言，没有该问题。")])]),t._v(" "),s("h2",{attrs:{id:"实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),s("h3",{attrs:{id:"数字转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字转换"}},[t._v("#")]),t._v(" 数字转换")]),t._v(" "),s("ol",[s("li",[s("p",[t._v('parseInt("08")')])]),t._v(" "),s("li",[s("p",[t._v("+'08'")])]),t._v(" "),s("li",[s("p",[t._v("Number('08')")]),t._v(" "),s("blockquote",[s("p",[t._v("速度:1<2 和 3")])])])]),t._v(" "),s("h2",{attrs:{id:"最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),s("h3",{attrs:{id:"分解大型运算任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分解大型运算任务"}},[t._v("#")]),t._v(" 分解大型运算任务")]),t._v(" "),s("p",[t._v("分解为小任务可以使得运算能够适时释放，可以防止阻塞 I/O")]),t._v(" "),s("h3",{attrs:{id:"转换数字为整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换数字为整数"}},[t._v("#")]),t._v(" 转换数字为整数")]),t._v(" "),s("p",[t._v("使用非位运算符可以代替 parseInt(value)，而且前者效率更高些")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("～～")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),s("h3",{attrs:{id:"export-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export-2"}},[t._v("#")]),t._v(" export")]),t._v(" "),s("ol",[s("li",[t._v("ES6 编程风格：如果模块默认输出一个函数，函数名的首字母应该小写。如果模块默认输出一个对象，对象名的首字母应该大写。 ​​​​")]),t._v(" "),s("li",[t._v("为了更好的"),s("code",[t._v("tree-shaking")]),t._v("，不推荐使用"),s("code",[t._v("export default")]),t._v("。"),s("a",{attrs:{href:"https://juejin.cn/post/6910009240053055496#heading-28",target:"_blank",rel:"noopener noreferrer"}},[t._v("原因"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("h3",{attrs:{id:"es6-class-组合优先于继承-什么时候使用继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6-class-组合优先于继承-什么时候使用继承"}},[t._v("#")]),t._v(" ES6 class 组合优先于继承,什么时候使用继承?")]),t._v(" "),s("ol",[s("li",[s("p",[t._v('你的继承表示"是一个"的关系而不是"有一个"的关系（人类->动物 vs 用户->用户详情）；')])]),t._v(" "),s("li",[s("p",[t._v("你可以重用来自基类的代码（人可以像所有动物一样行动）；")])]),t._v(" "),s("li",[s("p",[t._v("你想通过基类对子类进行全局的修改（改变所有动物行动时的热量消耗）；")]),t._v(" "),s("blockquote",[s("p",[t._v("参考："),s("a",{attrs:{href:"https://github.com/beginor/clean-code-javascript#%E7%BB%84%E5%90%88%E4%BC%98%E5%85%88%E4%BA%8E%E7%BB%A7%E6%89%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码整洁的 JavaScript"),s("OutboundLink")],1)])])])]),t._v(" "),s("h3",{attrs:{id:"怎么侦测当前代码是否在-es6-模块之中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么侦测当前代码是否在-es6-模块之中"}},[t._v("#")]),t._v(" 怎么侦测当前代码是否在 es6 模块之中？")]),t._v(" "),s("p",[t._v("ES6 模块中顶层的 this 值为 undefined，利用这个语法点可以侦测当前代码是否在 ES6 模块之中。")]),t._v(" "),s("h3",{attrs:{id:"什么时候this值为undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么时候this值为undefined"}},[t._v("#")]),t._v(" 什么时候this值为undefined?")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("严格模式下全局作用域中普通函数中的this值都为undefined")])]),t._v(" "),s("li",[s("p",[t._v("ES6 模块中顶层的 this 值为 undefined(ES6模块默认启用严格模式)")])]),t._v(" "),s("li",[s("p",[t._v("严格模式下自执行函数中的this")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("var obj = {\n\n　　fn:(function(i){\n\n　　　　// this->undefined\n\n　　　　return function () {\n\n　　　　　　// this->obj\n\n　　　　}\n\n　　})(0)\n\n}\n\nobj.fn();\n\n\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"js-内存泄漏的几种原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-内存泄漏的几种原因"}},[t._v("#")]),t._v(" js 内存泄漏的几种原因？")]),t._v(" "),s("p",[t._v("js 可能出现内存泄漏的五种原因：闭包函数、全局变量、对象属性循环引用、DOM 节点删除时未解绑事件、Map 和 Set 的属性直接被删除。 ​​​​")]),t._v(" "),s("h3",{attrs:{id:"为什么-2017-01-01-2016-12-31-字符串是怎么进行比较的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-2017-01-01-2016-12-31-字符串是怎么进行比较的"}},[t._v("#")]),t._v(' 为什么"2017-01-01">"2016-12-31"？字符串是怎么进行比较的？')]),t._v(" "),s("p",[t._v('其实是按每个字符的 charCode 大小逐个进行比较。例如："a11"<"a2"为 true。 ​​​​')])])}),[],!1,null,null,null);a.default=n.exports}}]);
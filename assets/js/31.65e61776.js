(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{461:function(t,s,a){"use strict";a.r(s);var e=a(2),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("mysql是开源的关系型数据库")]),t._v(" "),a("h3",{attrs:{id:"sql是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql是什么"}},[t._v("#")]),t._v(" sql是什么？")]),t._v(" "),a("p",[t._v("SQL是结构化查询语言的缩写，用来访问和操作数据库系统，sql拥有以下几种能力：")]),t._v(" "),a("ol",[a("li",[t._v("DDL：允许用户定义数据，也就是创建表、删除表、修改表结构这些操作。通常，DDL由数据库管理员执行。")]),t._v(" "),a("li",[t._v("DML：为用户提供添加、删除、更新数据的能力，这些是应用程序对数据库的日常操作。")]),t._v(" "),a("li",[t._v("DQL：允许用户查询数据，这也是通常最频繁的数据库日常操作。")])]),t._v(" "),a("p",[t._v("约定：SQL关键字总是大写，表明和列名小写")]),t._v(" "),a("p",[t._v("SQL是抽象的、无关实现的，优化器会自动选择最优的计划。")]),t._v(" "),a("h3",{attrs:{id:"时区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时区"}},[t._v("#")]),t._v(" 时区")]),t._v(" "),a("p",[t._v("mysql默认使用美国东8区时间，连接数据库时，添加属性："),a("code",[t._v("?parseTime=True&loc=Local")]),t._v("使用本地时区")]),t._v(" "),a("h3",{attrs:{id:"关系模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系模型"}},[t._v("#")]),t._v(" 关系模型")]),t._v(" "),a("p",[t._v("表的每一行称为记录（Record），每一列称为字段（Column）")]),t._v(" "),a("h4",{attrs:{id:"主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键"}},[t._v("#")]),t._v(" 主键")]),t._v(" "),a("p",[t._v("不能重复，唯一性，不应修改，选取主键的原则：不使用任何业务相关的字段作为主键。一般使用自增整数型作为主键（BIGINT）")]),t._v(" "),a("h4",{attrs:{id:"联合主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联合主键"}},[t._v("#")]),t._v(" 联合主键")]),t._v(" "),a("p",[t._v("多个字段唯一标识记录，也就是两个或者更多的字段设置为主键，非必要情况，尽量不要使用联合主键，它给关系表带来了复杂度的上升。")]),t._v(" "),a("h4",{attrs:{id:"外键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外键"}},[t._v("#")]),t._v(" 外键")]),t._v(" "),a("p",[t._v("通过外键可以把数据与另外一张表关联起来。外键不是通过列名实现的，需要定义外键约束：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ALTER TABLE students   //\nADD CONSTRAINT fk_class_id // 任意\nFOREIGN KEY (class_id)  // 指定外键名称\nREFERENCES classes (id); // 指定了外键关联到classes表的id列\n\n")])])]),a("p",[t._v("通过外键约束，可以保证无法插入无效的数据，比如外键id的值不存在关联表中时则无法插入。")]),t._v(" "),a("p",[t._v("由于外键约束会影响性能，大部分公司不设置外键约束。")]),t._v(" "),a("h4",{attrs:{id:"多对多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多对多"}},[t._v("#")]),t._v(" 多对多")]),t._v(" "),a("p",[t._v("通过一个中间表可以，关联两个1对多关系，就形成了多对多关系。")]),t._v(" "),a("h4",{attrs:{id:"一对一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一对一"}},[t._v("#")]),t._v(" 一对一")]),t._v(" "),a("p",[t._v("一个表的记录对应到另一个表的唯一一个记录。有的时候一个大表拆成两个一对一的表，目的是把经常读取和不经常读取的字段分开，以获得更高的性能")]),t._v(" "),a("h4",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("p",[t._v("索引是关系数据库中对某一列或多个列的值进行预排序的数据结构。通过使用索引，可以让数据库系统不必扫描整个表，而是直接定位到符合条件的记录，这样就大大加快了查询速度。")]),t._v(" "),a("p",[t._v("索引的效率取决于索引列的值是否散列，即该列的值如果越互不相同，那么索引效率越高")]),t._v(" "),a("p",[t._v("可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。")]),t._v(" "),a("p",[t._v("索引是典型的空间换时间方法。")]),t._v(" "),a("p",[t._v("关系数据库会自动对其创建主键索引")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("下载地址：https://dev.mysql.com/downloads/mysql/")]),t._v(" "),a("p",[t._v("安装完dmg文件后，在系统偏好设置中可以看到mysql")]),t._v(" "),a("p",[t._v("命令行配置文件添加"),a("code",[t._v("export PATH=${PATH}:/usr/local/mysql/bin")])]),t._v(" "),a("p",[t._v("此时可以通过密码登录了："),a("code",[t._v("mysql -u root -p")])]),t._v(" "),a("p",[t._v("输入"),a("code",[t._v("exit")]),t._v("推出命令行模式")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("h3",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("--")]),t._v("开头的是注释")]),t._v(" "),a("h3",{attrs:{id:"查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[t._v("#")]),t._v(" 查询")]),t._v(" "),a("h4",{attrs:{id:"基本查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本查询"}},[t._v("#")]),t._v(" 基本查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("表名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("SELECT为关键字表示查询，*表示所有列，FROM表示从哪个表查")]),t._v(" "),a("p",[t._v("SELECT不是必须带上FROM，SELECT还可以用来做计算操作"),a("code",[t._v("SELECT 100+200")]),t._v(",还可以通过"),a("code",[t._v("SELECT 1;")]),t._v("来测试数据库连接。")]),t._v(" "),a("h4",{attrs:{id:"条件查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[t._v("#")]),t._v(" 条件查询")]),t._v(" "),a("p",[t._v("使用where语句设定查询条件，语法："),a("code",[t._v("SELECT * FROM <表名> WHERE <条件表达式>")])]),t._v(" "),a("p",[t._v("表达式中可以使用"),a("code",[t._v("AND")]),t._v("、"),a("code",[t._v("OR")]),t._v("、"),a("code",[t._v("NOT")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("NOT class_id = 2")]),t._v("其实等价于"),a("code",[t._v("class_id <> 2")]),t._v("，因此，"),a("code",[t._v("NOT")]),t._v("查询不是很常用。")]),t._v(" "),a("p",[t._v("如果不加括号，则按照"),a("code",[t._v("NOT、AND、OR")]),t._v("的优先级进行")]),t._v(" "),a("p",[t._v("编写复杂的条件语句时，使用"),a("code",[t._v("()")]),t._v("改变优先级")]),t._v(" "),a("p",[a("code",[t._v("LIKE")]),t._v("用来表示相似，语法："),a("code",[t._v("name LIKE 'ab%'")]),t._v(",%表示任意字符，例如'ab%'将匹配'ab'，'abc'，'abcd'")]),t._v(" "),a("p",[a("code",[t._v("WHERE 60 <= score <= 90")]),t._v("，意思是"),a("code",[t._v("score >=60 or score <=90")])]),t._v(" "),a("h4",{attrs:{id:"投影查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#投影查询"}},[t._v("#")]),t._v(" 投影查询")]),t._v(" "),a("p",[t._v("默认的查询是把所有列都查出来，使用"),a("code",[t._v("SELECT 列1，列2，列3")]),t._v("让结果集包含指定列，称为投影查询,")]),t._v(" "),a("p",[t._v("投影查询时可以使用别名："),a("code",[t._v("SELECT 列1 别名1，列2 别名2")])]),t._v(" "),a("h4",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),a("p",[t._v("默认按照主键排序，想修改排序顺序使用"),a("code",[t._v("ORDER BY")]),t._v("，默认是升序，降序需要添加"),a("code",[t._v("DESC")]),t._v(",例如:"),a("code",[t._v("SELECT id, name, gender, score FROM students ORDER BY score DESC;")])]),t._v(" "),a("p",[t._v("如果排序相等可以再添加排序条件："),a("code",[t._v("SELECT id, name, gender, score FROM students ORDER BY score,gender")])]),t._v(" "),a("h4",{attrs:{id:"分页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页"}},[t._v("#")]),t._v(" 分页")]),t._v(" "),a("p",[t._v("分页实际上就是从结果集中“截取”出第M~N条记录,语法:"),a("code",[t._v("LIMIT 10 OFFSET 0")]),t._v(",OFFSET是可选的。")]),t._v(" "),a("p",[t._v("mysql中"),a("code",[t._v("LIMIT 15 OFFSET 30")]),t._v("可以简写成"),a("code",[t._v("LIMIT 30,15")]),t._v(",随着OFFSET越来越大，查询效率也会越来越低")]),t._v(" "),a("h4",{attrs:{id:"聚合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合查询"}},[t._v("#")]),t._v(" 聚合查询")]),t._v(" "),a("p",[t._v("sql提供了一些工具函数，使用这些函数查询也称为聚合查询。")]),t._v(" "),a("p",[a("strong",[t._v("COUNT()")]),t._v(":查询表有多少条数据，返回的结果只有一行一列，名为"),a("code",[t._v("COUNT(*)")]),t._v("，为了方便处理结果，应该设置一个别名："),a("code",[t._v("SELECT COUNT(*) num FROM students;")])]),t._v(" "),a("p",[t._v("除了COUNT，还有"),a("code",[t._v("SUM、AVG、MAX、MIN")]),t._v("，"),a("code",[t._v("MAX()")]),t._v("和"),a("code",[t._v("MIN()")]),t._v("函数并不限于数值类型。如果是字符类型，"),a("code",[t._v("MAX()")]),t._v("和"),a("code",[t._v("MIN()")]),t._v("会返回排序最后和排序最前的字符。")]),t._v(" "),a("p",[t._v("要特别注意：如果聚合查询的"),a("code",[t._v("WHERE")]),t._v("条件没有匹配到任何行，"),a("code",[t._v("COUNT()")]),t._v("会返回0，而"),a("code",[t._v("SUM()")]),t._v("、"),a("code",[t._v("AVG()")]),t._v("、"),a("code",[t._v("MAX()")]),t._v("和"),a("code",[t._v("MIN()")]),t._v("会返回"),a("code",[t._v("NULL")])]),t._v(" "),a("p",[a("strong",[t._v("分组聚合")]),t._v(":当我们要查询多个字段的数量时，使用"),a("code",[t._v("GROUP BY")]),t._v(",聚合查询只能放入分组的列")]),t._v(" "),a("h4",{attrs:{id:"多表查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[t._v("#")]),t._v(" 多表查询")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("SELECT * FROM students,classes")]),t._v(",返回结果是两张表的"),a("code",[t._v("乘积")]),t._v("，即两个表的列数为相加的关系，行数为相乘的关系。")]),t._v(" "),a("p",[t._v("这种多表查询又称为笛卡尔查询，由于两个表的列一起返回，很有可能会有重复列名，所以应该使用别名：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n    students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id sid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    classes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id cid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    classes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name cname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("因为要使用"),a("code",[t._v("表名.列名")]),t._v("的方式访问有些繁琐，所以还可以给表名设置别名：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id sid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id cid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name cname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" students s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classes c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"连接查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接查询"}},[t._v("#")]),t._v(" 连接查询")]),t._v(" "),a("p",[t._v("另一种多表查询方式，先确定一个主表作为结果集，然后，把其他表的行有选择性地“连接”在主表结果集上。")]),t._v(" "),a("p",[a("strong",[t._v("内连接")])]),t._v(" "),a("p",[a("code",[t._v("INNER JOIN")]),t._v("表示要连接的表，"),a("code",[t._v("ON")]),t._v("表示连接条件。INNER JOIN只返回同时存在于两张表的行数据")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SELECT s.id, s.name, s.class_id, c.name class_name, s.gender, s.score\nFROM students s\nINNER JOIN classes c\nON s.class_id = c.id;\n")])])]),a("p",[a("strong",[t._v("外连接")])]),t._v(" "),a("p",[t._v("RIGHT OUTER JOIN返回右表都存在的行。如果某一行仅在右表存在，那么结果集就会以"),a("code",[t._v("NULL")]),t._v("填充剩下的字段。")]),t._v(" "),a("p",[t._v("LEFT OUTER JOIN则返回左表都存在的行。")]),t._v(" "),a("p",[t._v("FULL OUTER JOIN，它会把两张表的所有记录全部选择出来，并且，自动把对方不存在的列填充为NULL")]),t._v(" "),a("h4",{attrs:{id:"强制指定索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制指定索引"}},[t._v("#")]),t._v(" 强制指定索引")]),t._v(" "),a("p",[t._v("在查询的时候，数据库系统会自动分析查询语句，并选择一个最合适的索引。但是很多时候，数据库系统的查询优化器并不一定总是能使用最优索引。如果我们知道如何选择索引，可以使用"),a("code",[t._v("FORCE INDEX")]),t._v("强制查询使用指定的索引。例如：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FORCE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("idx_class_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" class_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n")])])]),a("h3",{attrs:{id:"修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改"}},[t._v("#")]),t._v(" 修改")]),t._v(" "),a("h4",{attrs:{id:"insert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[t._v("#")]),t._v(" INSERT")]),t._v(" "),a("p",[t._v("插入数据必须使用"),a("code",[t._v("INSERT")]),t._v("语句，语法:"),a("code",[t._v("INSERT INTO <表名> (字段1, 字段2, ...) VALUES (值1, 值2, ...);")])]),t._v(" "),a("p",[t._v("段顺序不必和数据库表的字段顺序一致，但值的顺序必须和字段顺序一致。")]),t._v(" "),a("p",[t._v("还可以一次性插入多个值,使用"),a("code",[t._v("()")]),t._v("分隔：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" students "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'大宝'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'二宝'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("81")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果我们希望插入一条新记录（INSERT），但如果记录已经存在，就更新该记录，此时，可以使用"),a("code",[t._v("INSERT INTO ... ON DUPLICATE KEY UPDATE ...")]),t._v("语句：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INSERT INTO students (id, class_id, name, gender, score) VALUES (1, 1, '小明', 'F', 99) ON DUPLICATE KEY UPDATE name='小明', gender='F', score=99;\n\n")])])]),a("p",[t._v("更新的字段由"),a("code",[t._v("UPDATE")]),t._v("决定。")]),t._v(" "),a("p",[t._v("如果要插入的数据已存在，那么想什么也不做，此时，可以使用"),a("code",[t._v("INSERT IGNORE INTO ...")]),t._v("语句：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INSERT IGNORE INTO students (id, class_id, name, gender, score) VALUES (1, 1, '小明', 'F', 99);\n")])])]),a("p",[t._v("当想从SELECT结果集中插入到表中，使用："),a("code",[t._v("INSERT INTO statistics (class_id, average) SELECT class_id, AVG(score) FROM students GROUP BY class_id;")])]),t._v(" "),a("h4",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" REPLACE")]),t._v(" "),a("p",[t._v("如果我们希望插入一条新记录（INSERT），但如果记录已经存在，就先删除原记录，再插入新记录。此时，可以使用"),a("code",[t._v("REPLACE")]),t._v("语句，这样就不必先查询，再决定是否先删除再插入：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("REPLACE INTO students (id, class_id, name, gender, score) VALUES (1, 1, '小明', 'F', 99);\n")])])]),a("h4",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" UPDATE")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("UPDATE <表名> SET 字段1=值1, 字段2=值2, ... WHERE ...;")])]),t._v(" "),a("p",[t._v("这里的where与select中的一致，也就是说可以一次更新多条记录："),a("code",[t._v("UPDATE students SET name='小牛', score=77 WHERE id>=5 AND id<=7;")])]),t._v(" "),a("p",[t._v("更新字段时，可以使用表达式,复用字段原值："),a("code",[t._v("UPDATE students SET score=score+10 WHERE score<80;")])]),t._v(" "),a("h4",{attrs:{id:"delete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" DELETE")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("DELETE FROM <表名> WHERE ...;")])]),t._v(" "),a("p",[t._v("如果删除的数据关联了从表，那么会有两种情况：")]),t._v(" "),a("ol",[a("li",[t._v("创建外键时定义了ON DELETE CASCADE,关联数据被自动删除")]),t._v(" "),a("li",[t._v("没有定义ON DELETE CASCADE则报错")])]),t._v(" "),a("h2",{attrs:{id:"命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行"}},[t._v("#")]),t._v(" 命令行")]),t._v(" "),a("p",[t._v("MySQL Client的可执行程序是mysql，MySQL Server的可执行程序是mysqld。")]),t._v(" "),a("h3",{attrs:{id:"连接数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库"}},[t._v("#")]),t._v(" 连接数据库")]),t._v(" "),a("p",[a("code",[t._v("mysql -u root -p")])]),t._v(" "),a("h4",{attrs:{id:"连接远程数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接远程数据库"}},[t._v("#")]),t._v(" 连接远程数据库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql -h 10.0.1.99 -u root -p\n")])])]),a("h3",{attrs:{id:"查看所有数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看所有数据库"}},[t._v("#")]),t._v(" 查看所有数据库")]),t._v(" "),a("p",[a("code",[t._v("SHOW DATABASES;")])]),t._v(" "),a("p",[t._v("其中：information_schema、mysq、 performance_schema 、sys是系统库，不要改动")]),t._v(" "),a("h3",{attrs:{id:"创建数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库"}},[t._v("#")]),t._v(" 创建数据库")]),t._v(" "),a("p",[a("code",[t._v("CREATE DATABASE xxx;")])]),t._v(" "),a("h4",{attrs:{id:"使用数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用数据库"}},[t._v("#")]),t._v(" 使用数据库")]),t._v(" "),a("p",[a("code",[t._v("use xxx")])]),t._v(" "),a("h3",{attrs:{id:"删除数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除数据库"}},[t._v("#")]),t._v(" 删除数据库")]),t._v(" "),a("p",[a("code",[t._v("DROP DATABASE test;")])]),t._v(" "),a("h3",{attrs:{id:"查看所有表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看所有表"}},[t._v("#")]),t._v(" 查看所有表")]),t._v(" "),a("p",[a("code",[t._v("SHOW TABLES;")])]),t._v(" "),a("h3",{attrs:{id:"查看表结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看表结构"}},[t._v("#")]),t._v(" 查看表结构")]),t._v(" "),a("p",[a("code",[t._v("DESC test")])]),t._v(" "),a("h3",{attrs:{id:"查看创建表的sql语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看创建表的sql语句"}},[t._v("#")]),t._v(" 查看创建表的SQL语句")]),t._v(" "),a("p",[a("code",[t._v("SHOW CREATE TABLE students;")])]),t._v(" "),a("h3",{attrs:{id:"创建数据表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建数据表"}},[t._v("#")]),t._v(" 创建数据表")]),t._v(" "),a("ul",[a("li",[t._v("如果你不想字段为 "),a("strong",[t._v("NULL")]),t._v(" 可以设置字段的属性为 "),a("strong",[t._v("NOT NULL")]),t._v("， 在操作数据库时如果输入该字段的数据为"),a("strong",[t._v("NULL")]),t._v(" ，就会报错。")]),t._v(" "),a("li",[t._v("AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。")]),t._v(" "),a("li",[t._v("PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。")]),t._v(" "),a("li",[t._v("ENGINE 设置存储引擎，CHARSET 设置编码。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("runoob_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("runoob_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNSIGNED")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("runoob_title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("runoob_author"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("submission_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("runoob_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"快照"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快照"}},[t._v("#")]),t._v(" 快照")]),t._v(" "),a("p",[t._v("如果想要对一个表进行快照，即复制一份当前表的数据到一个新表，可以结合"),a("code",[t._v("CREATE TABLE")]),t._v("和"),a("code",[t._v("SELECT")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对class_id=1的记录进行快照，并存储为新表students_of_class1:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" students_of_class1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" class_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"删除表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[t._v("#")]),t._v(" 删除表")]),t._v(" "),a("p",[a("code",[t._v("DROP TABLE test;")])]),t._v(" "),a("h3",{attrs:{id:"修改表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改表"}},[t._v("#")]),t._v(" 修改表")]),t._v(" "),a("p",[t._v("添加")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ALTER TABLE students ADD COLUMN birth VARCHAR(10) NOT NULL;\n")])])]),a("p",[t._v("修改")]),t._v(" "),a("p",[a("code",[t._v("ALTER TABLE students CHANGE COLUMN birth birthday VARCHAR(20) NOT NULL;")])]),t._v(" "),a("p",[t._v("删除")]),t._v(" "),a("p",[a("code",[t._v("ALTER TABLE students DROP COLUMN birthday;")])]),t._v(" "),a("h2",{attrs:{id:"事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),a("h3",{attrs:{id:"介绍-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍-2"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("某些业务要求，一系列操作必须全部执行，如果其中有一个失败那么其他必须全部撤销。这种把多条语句作为一个整体进行操作的功能，被称为数据库"),a("em",[t._v("事务")]),t._v("。")]),t._v(" "),a("p",[t._v("对于单条SQL语句，数据库系统自动将其作为一个事务执行，这种事务被称为"),a("em",[t._v("隐式事务")]),t._v("。")]),t._v(" "),a("p",[t._v("要手动把多条SQL语句作为一个事务执行，使用"),a("code",[t._v("BEGIN")]),t._v("开启一个事务，使用"),a("code",[t._v("COMMIT")]),t._v("提交一个事务，这种事务被称为"),a("em",[t._v("显式事务")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" accounts "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" balance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" balance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" accounts "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" balance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" balance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当我们想要主动失败时，可以使用"),a("code",[t._v("ROLLBACK")]),t._v("回滚事务")]),t._v(" "),a("h3",{attrs:{id:"隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别"}},[t._v("#")]),t._v(" 隔离级别")]),t._v(" "),a("p",[t._v("mysql中，默认的隔离级别是"),a("code",[t._v("Repeatable Read")]),t._v("。当并发操作同一条数据的时候可能会出现数据不一致的问题，通过隔离级别可以有针对性的进行处理。SQL标准定义了4种级别：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Isolation Level")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("脏读（Dirty Read）")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("不可重复读（Non Repeatable Read）")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("幻读（Phantom Read）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Read Uncommitted")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Read Committed")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Repeatable Read")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Serializable")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])])])]),t._v(" "),a("p",[t._v("脏读（Dirty Read）：一个事务会读到另一个事务更新后但未提交的数据，如果另一个事务回滚，那么当前事务读到的数据就是脏数据")]),t._v(" "),a("p",[t._v("不可重复读：在一个事务内，多次读同一数据，在这个事务还没有结束时，如果另一个事务恰好修改了这个数据，那么，在第一个事务中，两次读取的数据就可能不一致。")]),t._v(" "),a("p",[t._v("幻读：在一个事务中，第一次查询某条记录，发现没有，但是，当试图更新这条不存在的记录时，竟然能成功，并且，再次读取同一条记录，它就神奇地出现了。")]),t._v(" "),a("p",[t._v("虽然"),a("code",[t._v("Serializable")]),t._v("隔离级别最严格，不会出现问题，但是性能会大大下降。")]),t._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("h3",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[t._v("#")]),t._v(" Host")]),t._v(" "),a("p",[t._v("当指定user表中的host时，表示只有指定的ip才能访问，如果设置值为"),a("code",[t._v("%")]),t._v("，则表示所有ip都可以访问。")]),t._v(" "),a("h2",{attrs:{id:"最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),a("ol",[a("li",[t._v("字段设置为不允许为null，加快查询速度。")]),t._v(" "),a("li",[t._v("把表中不经常读取的数据拆分成其他表，提高查询速度。")]),t._v(" "),a("li",[t._v("使用索引加速查询")]),t._v(" "),a("li",[t._v("不要在where语句中写复杂的运算，妨碍sql优化")]),t._v(" "),a("li",[t._v(".语句过大，大量的表join会导致中间结果集不准确，从而限制优化器选择较好的执行计划。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/29619558/answer/1920919756",target:"_blank",rel:"noopener noreferrer"}},[t._v("其他"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("h3",{attrs:{id:"mysql语法顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql语法顺序"}},[t._v("#")]),t._v(" mysql语法顺序？")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("（如"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("）  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v("  \n")])])]),a("h3",{attrs:{id:"mysql执行顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql执行顺序"}},[t._v("#")]),t._v(" mysql执行顺序？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("from  \non  \njoin  \nwhere  \ngroup by  \nhaving  \nselect  \ndistinct  \nunion  \norder by  \n")])])]),a("h3",{attrs:{id:"mysql一次性插入和批量插入哪个方式性能好"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql一次性插入和批量插入哪个方式性能好"}},[t._v("#")]),t._v(" mysql一次性插入和批量插入哪个方式性能好？")]),t._v(" "),a("p",[t._v("一般情况下不是数据量太大的话，一次性插入性能更好。参考文章：https://www.imooc.com/article/291781")])])}),[],!1,null,null,null);s.default=_.exports}}]);
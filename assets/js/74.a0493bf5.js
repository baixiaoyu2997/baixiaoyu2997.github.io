(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{504:function(t,a,e){"use strict";e.r(a);var s=e(2),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"常见npm包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见npm包"}},[t._v("#")]),t._v(" 常见npm包")]),t._v(" "),e("blockquote",[e("p",[t._v("本文是vue-cli的学习blog")])]),t._v(" "),e("p",[t._v("首先说一下常用的npm包，这样更方便之后的学习。")]),t._v(" "),e("h3",{attrs:{id:"commander"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commander"}},[t._v("#")]),t._v(" commander")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/tj/commander.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("commander"),e("OutboundLink")],1),t._v("是一款重量轻，表现力和强大的命令行框架，提供了用户命令行输入和参数解析强大功能。")]),t._v(" "),e("h3",{attrs:{id:"inquirer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inquirer"}},[t._v("#")]),t._v(" Inquirer")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/SBoudrias/Inquirer.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Inquirer"),e("OutboundLink")],1),t._v(" 为交互式命令行工具，比如执行 vue create 命令会有以下的命令行交互：\n"),e("img",{attrs:{src:"https://blog-pic.oss-cn-beijing.aliyuncs.com/%E5%89%8D%E5%BA%A6%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA_2020-05-04-19-44-12.png",alt:"前度脚手架搭建_2020-05-04-19-44-12"}})]),t._v(" "),e("h3",{attrs:{id:"execa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#execa"}},[t._v("#")]),t._v(" execa")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/sindresorhus/execa",target:"_blank",rel:"noopener noreferrer"}},[t._v("execa"),e("OutboundLink")],1),t._v(" 是可以调用 shell 和本地外部程序的 javascript 封装。会启动子进程执行，支持多操作系统，包括 windows，如果父进程退出，则生成的全部子进程都被杀死。它是在 Node.js 内置的 child_process.exec 基础上进行了提升，比如更好地支持 windows 平台，以及提供 Promise 的接口等等。")]),t._v(" "),e("h3",{attrs:{id:"handlebars"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handlebars"}},[t._v("#")]),t._v(" handlebars")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://handlebarsjs.com/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("handlebars"),e("OutboundLink")],1),t._v(" 是一个 javascript 语义模版库，而且与 Mustache 模板 是兼容的，通过一个 demo 来感受下：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" source "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<p>Hello, my name is {{name}}. I am from {{hometown}}. I have "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{kids.length}} kids:</p>"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ul>{{#kids}}<li>{{name}} is {{age}}</li>{{/kids}}</ul>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" template "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Handlebars"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alan"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hometown"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Somewhere, TX"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kids"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jimmy"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sally"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Would render:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <p>Hello, my name is Alan. I am from Somewhere, TX. I have 2 kids:</p>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <ul>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   <li>Jimmy is 12</li>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   <li>Sally is 4</li>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// </ul>")]),t._v("\n")])])]),e("h3",{attrs:{id:"metalsmith"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#metalsmith"}},[t._v("#")]),t._v(" metalsmith")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/segmentio/metalsmith",target:"_blank",rel:"noopener noreferrer"}},[t._v("metalsmith"),e("OutboundLink")],1),t._v(" 一个静态网站生成器，可以用在批量处理模板的场景，和 hexo 类似。它最大的特点就是所有的逻辑都是由插件处理，你只需要将这些插件用 metalsmith 连接起来使用即可")]),t._v(" "),e("h3",{attrs:{id:"chalk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chalk"}},[t._v("#")]),t._v(" chalk")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/chalk/chalk",target:"_blank",rel:"noopener noreferrer"}},[t._v("chalk"),e("OutboundLink")],1),t._v(" 是用于修改控制台字符串的样式，包括字体样式（加粗），颜色以及背景颜色等。\n"),e("img",{attrs:{src:"https://blog-pic.oss-cn-beijing.aliyuncs.com/%E5%89%8D%E5%BA%A6%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA_2020-05-04-19-58-51.png",alt:"前度脚手架搭建_2020-05-04-19-58-51"}}),t._v("\n使用比较简单：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const chalk = require('chalk');\nconsole.log(chalk.blue('Hello world!'));\n")])])]),e("h3",{attrs:{id:"download-git-repo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-git-repo"}},[t._v("#")]),t._v(" download-git-repo")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://gitlab.com/flippidippi/download-git-repo#readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("download-git-repo"),e("OutboundLink")],1),t._v(" 是用于 从 GitHub, GitLab, Bitbucket 下载一个 git 仓库，API 如下：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("download")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("repository"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" destination"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ul",[e("li",[t._v("repository：仓库地址。")]),t._v(" "),e("li",[t._v("destination：存放下载 git 仓库的路径。")]),t._v(" "),e("li",[t._v("options：选项，clone。是以 http download 的形式还是 git clone 的形式下载。其中 git clone 的形式支持下载 private 仓库。")]),t._v(" "),e("li",[t._v("callback：下载完成地回调。")])]),t._v(" "),e("h3",{attrs:{id:"consolidate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consolidate"}},[t._v("#")]),t._v(" consolidate")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/tj/consolidate.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("consolidate"),e("OutboundLink")],1),t._v(" 是一个模版引擎整合库，它的作用是把一些著名的模板引擎适配成 Express 兼容的接口")]),t._v(" "),e("h2",{attrs:{id:"vue-create"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-create"}},[t._v("#")]),t._v(" vue create")]),t._v(" "),e("h3",{attrs:{id:"create入口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create入口"}},[t._v("#")]),t._v(" create入口")]),t._v(" "),e("p",[t._v("vue create 命令的入口在 packages/@vue/cli/bin/vue.js 中:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("program\n  .command('create <app-name>')\n  .description('create a new project powered by vue-cli-service')\n  .option('-p, --preset <presetName>', 'Skip prompts and use saved or remote preset')\n  .option('-d, --default', 'Skip prompts and use default preset')\n  .option('-i, --inlinePreset <json>', 'Skip prompts and use inline JSON string as preset')\n  .option('-m, --packageManager <command>', 'Use specified npm client when installing dependencies')\n  .option('-r, --registry <url>', 'Use specified npm registry when installing dependencies (only for npm)')\n  .option('-g, --git [message]', 'Force git initialization with initial commit message')\n  .option('-n, --no-git', 'Skip git initialization')\n  .option('-f, --force', 'Overwrite target directory if it exists')\n  .option('-c, --clone', 'Use git clone when fetching remote preset')\n  .option('-x, --proxy', 'Use specified proxy when creating project')\n  .option('-b, --bare', 'Scaffold project without beginner instructions')\n  .action((name, cmd) => {\n    const options = cleanArgs(cmd)\n    // --git makes commander to default git to true\n    if (process.argv.includes('-g') || process.argv.includes('--git')) {\n      options.forceGit = true\n    }\n    require('../lib/create')(name, options)\n  })\n")])])]),e("p",[t._v("参数翻译：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-p, --preset <presetName>       忽略提示符并使用已保存的或远程的预设选项\n-d, --default                   忽略提示符并使用默认预设选项\n-i, --inlinePreset <json>       忽略提示符并使用内联的 JSON 字符串预设选项\n-m, --packageManager <command>  在安装依赖时使用指定的 npm 客户端\n-r, --registry <url>            在安装依赖时使用指定的 npm registry\n-g, --git [message]             强制 / 跳过 git 初始化，并可选的指定初始化提交信息\n-n, --no-git                    跳过 git 初始化\n-f, --force                     覆写目标目录可能存在的配置\n-c, --clone                     使用 git clone 获取远程预设选项\n-x, --proxy                     使用指定的代理创建项目\n-b, --bare                      创建项目时省略默认组件中的新手指导信息\n-h, --help                      输出使用帮助信息\n")])])]),e("h3",{attrs:{id:"整体分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体分析"}},[t._v("#")]),t._v(" 整体分析")]),t._v(" "),e("p",[t._v("先通过一张流程图大致聊了解下 vue create 的过程:\n"),e("img",{attrs:{src:"https://blog-pic.oss-cn-beijing.aliyuncs.com/%E5%89%8D%E5%BA%A6%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA_2020-05-04-20-27-06.png",alt:"前度脚手架搭建_2020-05-04-20-27-06"}}),t._v("\n从这个图可以直观地感受到 vue create 整个过程还是比较复杂的，为了比较清楚的讲解整个过程，大致分为了 5 个部分，如下：")]),t._v(" "),e("ul",[e("li",[t._v("基础验证")]),t._v(" "),e("li",[t._v("获取预设选项")]),t._v(" "),e("li",[t._v("依赖安装")]),t._v(" "),e("li",[t._v("Generator")]),t._v(" "),e("li",[t._v("结尾分析")])]),t._v(" "),e("h3",{attrs:{id:"基础验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础验证"}},[t._v("#")]),t._v(" 基础验证")])])}),[],!1,null,null,null);a.default=n.exports}}]);